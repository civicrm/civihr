!function(e){define("leave-absences/shared/config",[],function(){e.config({paths:{mocks:"../test/mocks"}}),e.config({paths:{mocks:CRM.vars.leaveAndAbsences.baseURL+"/js/test/mocks"}})})}(require),function(e){define("leave-absences/shared/modules/shared-settings",["common/angular"],function(t){return t.module("leave-absences.settings",[]).constant("shared-settings",{attachmentToken:e.vars.leaveAndAbsences.attachmentToken,debug:e.debug,managerPathTpl:e.vars.leaveAndAbsences.baseURL+"/views/manager-leave/",sharedPathTpl:e.vars.leaveAndAbsences.baseURL+"/views/shared/",sourcePath:e.vars.leaveAndAbsences.baseURL+"/js/src/leave-absences/",serverDateFormat:"YYYY-MM-DD",serverDateTimeFormat:"YYYY-MM-DD HH:mm:ss",permissions:{admin:{access:"access leave and absences",administer:"administer leave and absences"},ssp:{access:"access leave and absences in ssp",manage:"manage leave and absences in ssp"}},fileUploader:{queueLimit:10},statusNames:{approved:"approved",adminApproved:"admin_approved",awaitingApproval:"awaiting_approval",moreInformationRequired:"more_information_required",rejected:"rejected",cancelled:"cancelled"}})})}(CRM),define("leave-absences/shared/modules/apis",["common/angular","common/modules/apis","leave-absences/shared/modules/shared-settings"],function(e){"use strict";return e.module("leave-absences.apis",["common.apis","leave-absences.settings"])}),define("leave-absences/shared/modules/models-instances",["common/angular","common/models/instances/instance","common/modules/services","common/modules/models","common/services/check-permissions","leave-absences/shared/modules/shared-settings"],function(e){"use strict";return e.module("leave-absences.models.instances",["common.models","common.models.instances","common.services","leave-absences.settings"])}),define("leave-absences/shared/modules/models",["common/angular","common/modules/models","common/modules/services","leave-absences/shared/modules/apis","leave-absences/shared/modules/models-instances","leave-absences/shared/modules/shared-settings"],function(e){"use strict";return e.module("leave-absences.models",["common.models","common.services","leave-absences.apis","leave-absences.models.instances","leave-absences.settings"])}),define("leave-absences/shared/instances/absence-period.instance",["leave-absences/shared/modules/models-instances","common/moment","common/models/instances/instance","common/services/hr-settings"],function(e,t){"use strict";e.factory("AbsencePeriodInstance",["$log","ModelInstance","HR_settings",function(e,n,a){return e.debug("AbsencePeriodInstance"),n.extend({defaultCustomData:function(){return{current:!1}},transformAttributes:function(e){var n=t();return e.current=!1,t(e.start_date).isSameOrBefore(n,"day")&&t(e.end_date).isSameOrAfter(n,"day")&&(e.current=!0),e},isInPeriod:function(e){var n=a.DATE_FORMAT.toUpperCase(),o=t(e,n);return t(this.start_date).isSameOrBefore(o)&&t(this.end_date).isSameOrAfter(o)}})}])}),define("leave-absences/shared/apis/absence-period.api",["leave-absences/shared/modules/apis","common/services/api"],function(e){"use strict";e.factory("AbsencePeriodAPI",["$log","api",function(e,t){return e.debug("AbsencePeriodAPI"),t.extend({all:function(t){return e.debug("AbsencePeriodAPI"),this.sendGET("AbsencePeriod","get",t).then(function(e){return e.values})}})}])}),define("leave-absences/shared/models/absence-period.model",["leave-absences/shared/modules/models","common/moment","leave-absences/shared/modules/shared-settings","leave-absences/shared/instances/absence-period.instance","leave-absences/shared/apis/absence-period.api","common/models/model","common/services/hr-settings"],function(e,t){"use strict";e.factory("AbsencePeriod",["$log","Model","AbsencePeriodAPI","AbsencePeriodInstance","shared-settings",function(e,n,a,o,s){return e.debug("AbsencePeriod"),n.extend({all:function(e){return a.all(e).then(function(e){return e.map(function(e){return o.init(e,!0)})})},current:function(){var e=t().format(s.serverDateFormat),n={start_date:{"<=":e},end_date:{">=":e}};return a.all(n).then(function(e){return e&&e.length?o.init(e[0],!0):null})}})}])}),define("leave-absences/shared/apis/absence-type.api",["common/lodash","common/moment","leave-absences/shared/modules/apis","common/services/api"],function(e,t,n){"use strict";n.factory("AbsenceTypeAPI",["$log","api","shared-settings",function(n,a,o){return n.debug("AbsenceTypeAPI"),a.extend({all:function(t){return n.debug("AbsenceTypeAPI.all"),this.sendGET("AbsenceType","get",e.defaultsDeep(t||{},{is_active:!0,options:{sort:"weight ASC"}})).then(function(e){return e.values})},calculateToilExpiryDate:function(a,s,r){return n.debug("AbsenceTypeAPI.calculateToilExpiryDate"),r=e.assign({},r,{absence_type_id:a,date:t(s).format(o.serverDateFormat)}),this.sendPOST("AbsenceType","calculateToilExpiryDate",r).then(function(e){return e.values.expiry_date})}})}])}),define("leave-absences/shared/instances/absence-type.instance",["leave-absences/shared/modules/models-instances","common/models/instances/instance"],function(e){"use strict";e.factory("AbsenceTypeInstance",["$log","ModelInstance",function(e,t){return e.debug("AbsenceTypeInstance"),t.extend({})}])}),define("leave-absences/shared/models/absence-type.model",["common/lodash","leave-absences/shared/modules/models","common/models/model","common/models/option-group","leave-absences/shared/apis/absence-type.api","leave-absences/shared/instances/absence-type.instance"],function(e,t){"use strict";t.factory("AbsenceType",["$log","$q","Model","OptionGroup","AbsenceTypeAPI","AbsenceTypeInstance",function(t,n,a,o,s,r){return t.debug("AbsenceType"),a.extend({all:function(e){return s.all(e).then(function(e){return e.map(function(e){return r.init(e,!0)})})},calculateToilExpiryDate:function(e,t,n){return s.calculateToilExpiryDate(e,t,n)},canExpire:function(e){return s.all({accrual_expiration_unit:{"IS NOT NULL":1},accrual_expiration_duration:{"IS NOT NULL":1},allow_accruals_request:1,id:e,options:{limit:1},return:["id"]}).then(function(e){return e.length>0})},loadCalculationUnits:function(t){return o.valuesOf("hrleaveandabsences_absence_type_calculation_unit").then(function(n){return n=e.keyBy(n,"value"),e.map(t,function(t){return e.assign(t,{calculation_unit_label:n[t.calculation_unit].label,calculation_unit_name:n[t.calculation_unit].name})})})}})}])}),define("leave-absences/shared/modules/components",["common/angular","common/modules/directives","common/modules/models","leave-absences/shared/modules/shared-settings","leave-absences/shared/modules/models"],function(e){return e.module("leave-absences.components",["common.directives","common.models","leave-absences.settings","leave-absences.models"])}),define("leave-absences/shared/components/leave-balance-tab-filters.component",["common/lodash","common/moment","leave-absences/shared/modules/components"],function(e,t,n){function a(n){function a(e){e.absencePeriods&&u.absencePeriods.length&&(u.filters.period_id=s().id),e.absenceTypes&&u.absenceTypes.length&&(u.filters.type_id=r().id),(e.loggedInContactId||e.userRole)&&(u.filters.managed_by="manager"===u.userRole?u.loggedInContactId:void 0),o()&&u.submitFilters()}function o(){return e.every(u.filters,function(e){return null!==e})}function s(){return e.find(u.absencePeriods,function(e){return e.current})||u.absencePeriods.reduce(function(e,n){return t(e.end_date).isAfter(n.end_date)?e:n})}function r(){return u.absenceTypes.reduce(function(e,t){return e.title.localeCompare(t.title)?e:t})}function i(e){return e.current?"Current Period ("+e.title+")":e.title}function c(){n.$emit("LeaveBalanceFilters::update",u.filters)}var u=this;u.filters={period_id:null,type_id:null,managed_by:null},u.$onChanges=a,u.labelPeriod=i,u.submitFilters=c}n.component("leaveBalanceTabFilters",{controller:a,controllerAs:"balanceFilters",bindings:{absencePeriods:"<",absenceTypes:"<",loggedInContactId:"<",lookupContacts:"<",userRole:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-balance-tab-filters.html"}]}),a.$inject=["$scope"]}),define("leave-absences/shared/apis/entitlement.api",["leave-absences/shared/modules/apis","common/lodash","common/services/api"],function(e,t){"use strict";e.factory("EntitlementAPI",["$log","api",function(e,n){function a(e){var n=t.clone(e),a=n["api.LeavePeriodEntitlement.getremainder"].values;return a.length&&(n.remainder=a[0].remainder),delete n["api.LeavePeriodEntitlement.getremainder"],n}function o(e){var n=t.clone(e),a=n["api.LeavePeriodEntitlement.getentitlement"].values[0].entitlement;return n.value=a,delete n["api.LeavePeriodEntitlement.getentitlement"],n}return e.debug("EntitlementAPI"),n.extend({all:function(t,n){return e.debug("EntitlementAPI.all"),t["api.LeavePeriodEntitlement.getentitlement"]={entitlement_id:"$value.id"},n&&(t["api.LeavePeriodEntitlement.getremainder"]={entitlement_id:"$value.id",include_future:!0}),this.sendGET("LeavePeriodEntitlement","get",t,!1).then(function(e){return e.values}).then(function(e){return e=e.map(o),n&&(e=e.map(a)),e})},breakdown:function(t){return e.debug("EntitlementAPI.breakdown"),this.sendGET("LeavePeriodEntitlement","getbreakdown",t).then(function(e){return e.values})},getLeaveBalances:function(t,n,a,o,s){return e.debug("EntitlementAPI.getLeaveBalances"),this.getAll("LeavePeriodEntitlement",t,n,a,o,"getLeaveBalances",s)}})}])}),define("leave-absences/shared/models/leave-balance-report.model",["leave-absences/shared/modules/models","leave-absences/shared/apis/entitlement.api","common/models/model"],function(e){"use strict";e.factory("LeaveBalanceReport",["Model","EntitlementAPI",function(e,t){return e.extend({all:function(e,n,a,o,s){return t.getLeaveBalances(this.processFilters(e),n,a,o,s)}})}])}),define("leave-absences/shared/components/leave-balance-tab.component",["common/angular","common/lodash","leave-absences/shared/modules/components","leave-absences/shared/components/leave-balance-tab-filters.component","leave-absences/shared/models/leave-balance-report.model","common/services/notification.service","common/services/pub-sub"],function(e,t,n){function a(n,a,o,s,r,i,c,u,l,d,m){function f(){q(),b().then(function(){P.loading.component=!1})}function p(){return o.all({options:{sort:"title ASC"}}).then(function(e){P.absencePeriods=e})}function v(){return s.all().then(s.loadCalculationUnits).then(function(e){P.absenceTypes=e})}function h(){return r.all(null,null,"sort_name ASC").then(function(e){P.lookupContacts=e.list})}function b(){return n.all([p(),v(),h(),g(),C()]).catch(function(e){c.error("Error",e)})}function g(){return l.get().then(function(e){P.loggedInContactId=e.contactId})}function y(){return P.loading.report=!0,i.all(R,P.pagination,void 0,void 0,!1).then(function(e){P.report=_(e.list),P.reportCount=e.total}).catch(function(e){c.error("Error",e.error_message)}).finally(function(){P.loading.report=!1})}function _(n){return n.map(function(n){return n=e.copy(n),n.absence_types=t.keyBy(n.absence_types,function(e){return e.id}),n})}function q(){a.$on("LeaveBalanceFilters::update",A),u.subscribe("LeaveRequest::new",T)}function C(){return m(d.permissions.admin.administer).then(function(e){P.userRole=e?"admin":"manager"})}function T(e){A(e,R)}function A(e,t){R=t,P.pagination.page=1,D(),P.loadReportCurrentPage()}function D(){P.selectedAbsenceTypes=P.absenceTypes.filter(function(e){return+e.id==+R.type_id})}var R={},P=this;P.absencePeriods=[],P.absenceTypes=[],P.loading={component:!0,report:!0},P.loggedInContactId=null,P.lookupContacts=[],P.pagination={page:1,size:50},P.report=[],P.reportCount=0,P.userRole=null,P.$onInit=f,P.loadReportCurrentPage=y}n.component("leaveBalanceTab",{controller:a,controllerAs:"leaveBalanceTab",templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-balance-tab.html"}]}),a.$inject=["$q","$rootScope","AbsencePeriod","AbsenceType","Contact","LeaveBalanceReport","notificationService","pubSub","Session","shared-settings","checkPermissions"]}),define("leave-absences/shared/modules/controllers",["common/angular","common/angularBootstrap","leave-absences/shared/modules/models","leave-absences/shared/modules/models-instances","leave-absences/shared/modules/shared-settings"],function(e){return e.module("leave-absences.controllers",["ui.select","leave-absences.models","leave-absences.models.instances","leave-absences.settings"])}),define("leave-absences/shared/controllers/sub-controllers/leave-calendar-admin.controller",["common/lodash","common/moment","leave-absences/shared/modules/controllers","common/models/contract","common/services/notification.service"],function(e,t,n){function a(t,n,a,o,s,r,i){function c(){return{loadContacts:function(){return l.loadContactsForAdmin()}}}function u(e){r.info("",["<p>When <strong>All</strong> filter is selected, all staff members with contracts which are active in the selected absence period are displayed.</p>","<p><strong>People I approve</strong> filter displays only staff members who you approve leave for.</p>","<p><strong>People without approver</strong> filter displays all staff members with contracts which are active in the selected absence period and who do not have any leave approver assigned.</p>"].join(""))}t.debug("LeaveCalendarAdminController");var l,d;return{init:function(t){return d=t,l=i.init(d),d.filters.userSettings.assignedTo=e.find(d.filtersByAssignee,{type:"me"}),d.showContactDetailsLink=!0,d.showContactName=!0,d.showFilters=!0,d.showAdminFilteringHint=u,c()}}}n.controller("LeaveCalendarAdminController",["$log","$q","Contact","ContactInstance","Contract","notificationService","LeaveCalendarService",a])}),define("leave-absences/shared/controllers/sub-controllers/leave-calendar-manager.controller",["common/lodash","common/moment","leave-absences/shared/modules/controllers"],function(e,t,n){function a(t,n,a,o){function s(){return{loadContacts:function(){return r.loadLookUpAndFilteredContacts()}}}t.debug("LeaveCalendarManagerController");var r,i;return{init:function(t){return i=t,r=o.init(i),i.filters.userSettings.assignedTo=e.find(i.filtersByAssignee,{type:"me"}),i.showContactName=!0,i.showFilters=!0,s()}}}n.controller("LeaveCalendarManagerController",["$log","Contact","ContactInstance","LeaveCalendarService",a])}),define("leave-absences/shared/controllers/sub-controllers/leave-calendar-staff.controller",["common/lodash","common/moment","leave-absences/shared/modules/controllers"],function(e,t,n){function a(e,t,n,a){function o(){return{loadContacts:function(){return r.displaySingleContact?s.loadFilteredContacts():"admin"===r.userPermissionRole?s.loadContactsForAdmin():s.loadLookUpAndFilteredContacts()}}}e.debug("LeaveCalendarStaffController");var s,r;return{init:function(e){return r=e,s=a.init(r),r.filters.userSettings.contacts_with_leaves=!0,r.showTheseContacts=[r.contactId],r.showContactName=!0,r.showFilters=!0,r.displaySingleContact&&(r.showFilters=!1,r.lookupContacts=[{id:r.contactId}]),o()}}}n.controller("LeaveCalendarStaffController",["$log","$q","Contact","LeaveCalendarService",a])}),define("leave-absences/shared/components/leave-calendar.component",["common/lodash","common/moment","leave-absences/shared/modules/components","leave-absences/shared/controllers/sub-controllers/leave-calendar-admin.controller","leave-absences/shared/controllers/sub-controllers/leave-calendar-manager.controller","leave-absences/shared/controllers/sub-controllers/leave-calendar-staff.controller"],function(e,t,n){function a(n,a,o,s,r,i,c,u,l,d){function m(){N().then(g).then(b).then(_).then(I).then(function(){return a.all([C(),D(),S(),W.showFilters?R():e.noop])}).then(function(){f(),y(),E()}).then(function(){W.loading.page=!1})}function f(){W.supportData.absenceTypes.push({id:"",title:"Leave",color:"#4D4D68",calculation_unit:e.chain(W.supportData.calculationUnits).find({name:"days"}).get("value").value()})}function p(){for(var e=[],n=t(W.selectedPeriod.start_date).clone().startOf("month"),a=t(W.selectedPeriod.end_date).clone().endOf("month");n.isBefore(a);)e.push(L(n)),n.add(1,"month");W.months=e}function v(){return e.includes(["admin","manager"],W.userPermissionRole)}function h(e){return e.format("YYYY-MM")}function b(){s.$on("LeaveCalendar::updateFiltersByAbsenceType",function(e,t){W.supportData.absenceTypesToFilterBy=t,$(!0)})}function g(){s.$new().$watch(function(){return W.selectedMonthIndex},function(e,t){null!==t&&e!==t&&(F(),E(),$())})}function y(e){W.injectMonth=!0,U("injected").then(function(){$(e)}).then(function(){W.loading.calendar=!1})}function _(){j=n("LeaveCalendar"+e.capitalize(H)+"Controller").init(W)}function q(e){return e.current?"Current Period ("+e.title+")":e.title}function C(){return i.all().then(function(t){W.absencePeriods=e.sortBy(t,"start_date"),W.selectedPeriod=e.find(W.absencePeriods,function(e){return!!e.current})}).then(p).then(k)}function T(){return c.all().then(c.loadCalculationUnits)}function A(){return l.valuesOf(["hrleaveandabsences_absence_type_calculation_unit","hrleaveandabsences_leave_request_day_type","hrleaveandabsences_leave_request_status","hrleaveandabsences_toil_amounts"])}function D(){return j.loadContacts().then(function(e){W.contacts=e})}function R(){return l.valuesOf(["hrjc_region","hrjc_location","hrjc_level_type","hrjc_department"]).then(function(e){W.filters.optionValues.regions=e.hrjc_region,W.filters.optionValues.locations=e.hrjc_location,W.filters.optionValues.levelTypes=e.hrjc_level_type,W.filters.optionValues.departments=e.hrjc_department})}function P(){return u.all()}function S(){return a.all([T(),P(),A()]).then(function(t){W.supportData.absenceTypes=t[0],W.supportData.publicHolidays=t[1],W.supportData.calculationUnits=t[2].hrleaveandabsences_absence_type_calculation_unit,W.supportData.dayTypes=t[2].hrleaveandabsences_leave_request_day_type,W.supportData.leaveRequestStatuses=t[2].hrleaveandabsences_leave_request_status,W.supportData.toilAmounts=e.keyBy(t[2].hrleaveandabsences_toil_amounts,"value")})}function I(){var e=a.resolve();return W.injectMonth&&(e=U("destroyed"),W.injectMonth=!1),e}function L(e){return{index:h(e),month:e.month(),year:e.year(),name:e.format("MMMM"),moment:t().year(e.year()).month(e.month())}}function O(){var t=W.selectedPeriod.id;W.selectedPeriod=e.find(W.absencePeriods,function(e){return!!e.current}),t!==W.selectedPeriod.id&&p(),k(),E(),w("month")}function M(e){var n="previous"===e?"subtract":"add";F(t(W.selectedMonth.moment)[n](1,"month")),E(),w("month")}function w(t){t=e.includes(["contacts","period","month"],t)?t:"period",a.resolve().then(I).then("period"===t&&p).then("period"===t&&B).then("contacts"===t&&D).then("month"===t&&E).then(function(){y("contacts"===t)})}function $(e){s.$emit("LeaveCalendar::showMonth",!!e)}function k(){F(t())}function B(){F(W.months[0].moment)}function x(n){var a="previous"===n?"first":"last",o=e[a](W.months),s=t().year(o.year).month(o.month);W.monthPaginatorsAvailability[n]=!W.selectedMonth.moment.isSame(s,"month")}function E(){x("previous"),x("next")}function F(t){t&&(W.selectedMonthIndex=h(t)),W.selectedMonth=e.find(W.months,{index:W.selectedMonthIndex})}function N(){return a.all([d(r.permissions.admin.administer),d(r.permissions.ssp.manage)]).then(function(e){W.userPermissionRole=e[0]?"admin":e[1]?"manager":"staff",H=W.roleOverride?W.roleOverride:W.userPermissionRole})}function U(t){return a(function(n){var a=s.$on("LeaveCalendar::month"+e.capitalize(t),function(){a(),n()})})}o.debug("Component: leave-calendar");var j,H,W=this;W.absencePeriods=[],W.contacts=[],W.contactIdsToReduceTo=null,W.injectMonth=!1,W.months=[],W.selectedMonth={},W.selectedMonthIndex="",W.selectedPeriod=null,W.showContactName=!1,W.showFilters=!1,W.userPermissionRole="staff",W.loading={calendar:!0,page:!0},W.filters={hideOnMobile:!0,optionValues:{},userSettings:{contact:null,contacts_with_leaves:!0,department:null,level_type:null,location:null,region:null},absenceTypes:{}},W.filtersByAssignee=[{type:"me",label:"People I approve"},{type:"unassigned",label:"People without approver"},{type:"all",label:"All"}],W.filters.userSettings.assignedTo=W.filtersByAssignee[2],W.monthPaginatorsAvailability={previous:!0,next:!0},W.supportData={absenceTypesToFilterBy:[]},W.$onInit=m,W.canManageRequests=v,W.labelPeriod=q,W.navigateToCurrentMonth=O,W.paginateMonth=M,W.refresh=w}n.component("leaveCalendar",{bindings:{contactId:"<",displaySingleContact:"<?",roleOverride:"@?"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-calendar.html"}],controllerAs:"calendar",controller:["$controller","$q","$log","$rootScope","shared-settings","AbsencePeriod","AbsenceType","PublicHoliday","OptionGroup","checkPermissions",a]})}),define("leave-absences/shared/components/leave-calendar-day.component",["common/lodash","common/moment","leave-absences/shared/modules/components"],function(e,t,n){function a(n,a,o){"use strict";function s(){v()}function r(e,t){o.openModalByID(t.id)}function i(e){return e.isAM?"AM":e.isPM?"PM":""}function c(e){var n=t(e.from_date).isSame(h.date,"day"),a=t(e.to_date).isSame(h.date,"day");return n?t(e.from_date).format("HH:mm"):a?t(e.to_date).format("HH:mm"):""}function u(t,n){var a=e.find(h.supportData.absenceTypes,{id:t.type_id});h.contactData.leaveRequestsAttributes[t.id].absenceTypeTitle=a.title}function l(t,n){var a,o;if(!t.type_id)return void(n.unit=t.from_date_type?"days":"hours");a=e.find(h.supportData.absenceTypes,{id:t.type_id}),o=e.find(h.supportData.calculationUnits,{value:a.calculation_unit}),n.unit=o.name}function d(e,n){n.from_date=t(e.from_date).toDate(),n.to_date=t(e.to_date).toDate()}function m(t,n){"days"===n.unit&&(n.from_date_type=e.find(h.supportData.dayTypes,{value:t.from_date_type}).label,n.to_date_type=e.find(h.supportData.dayTypes,{value:t.to_date_type}).label)}function f(e,t){var n="";n=t.isAccruedTOIL?"AT":"days"===t.unit?i(t):c(e),t.label=n}function p(e){var t=h.contactData.leaveRequestsAttributes[e.id];[l,m,f,d,u].forEach(function(n){n.call(this,e,t)})}function v(){a.$watch("day.contactData.leaveRequests",function(){h.contactData&&h.contactData.leaveRequests&&h.contactData.leaveRequests.forEach(p)},!0)}n.debug("Component: leave-calendar-day");var h=this;h.$onInit=s,h.openLeavePopup=r}n.component("leaveCalendarDay",{bindings:{contactData:"<",date:"<",supportData:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-calendar-day.html"}],controllerAs:"day",controller:a}),a.$inject=["$log","$scope","LeavePopup"]}),define("leave-absences/shared/components/leave-calendar-legend.component",["common/lodash","leave-absences/shared/modules/components"],function(e,t){function n(t,n){function a(){i()}function o(e){return!!e.id}function s(t){var n=e.includes(l.absenceTypesToFilterBy,t);return!l.absenceTypesToFilterBy.length||n}function r(e){return{backgroundColor:e.color}}function i(){n.$new().$watch(function(){return l.absenceTypesToFilterBy},function(e,t){e!==t&&n.$emit("LeaveCalendar::updateFiltersByAbsenceType",l.absenceTypesToFilterBy)},!0)}function c(){l.absenceTypesToFilterBy=[]}function u(t){e.includes(l.absenceTypesToFilterBy,t)?e.remove(l.absenceTypesToFilterBy,function(e){return t===e}):l.absenceTypesToFilterBy.push(t)}t.debug("Component: leave-calendar-legend");var l=this;l.absenceTypesToFilterBy=[],l.legendCollapsed=!1,l.nonWorkingDayTypes=[{label:"Weekend",cssClassSuffix:"weekend"},{label:"Public Holiday",cssClassSuffix:"public-holiday"},{label:"Non Working Day",cssClassSuffix:"non-working-day"}],l.otherBadges=[{label:"AM",description:"AM Only"},{label:"PM",description:"PM Only"},{label:"HH:MM",description:"Time",cssClassSuffix:"hours"},{label:"",description:"Requested",cssClassSuffix:"requested"},{label:"AT",description:"Accrued TOIL"}],l.$onInit=a,l.checkIfAbsenceTypeIdIsDefined=o,l.checkIfAbsenceTypeIsSelectedForFiltering=s,l.getAbsenceTypeStyle=r,l.resetFilteringByAbsenceTypes=c,l.toggleFilteringByAbsenceType=u}t.component("leaveCalendarLegend",{bindings:{absenceTypes:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-calendar-legend.html"}],controllerAs:"legend",controller:n}),n.$inject=["$log","$rootScope"]}),define("leave-absences/shared/components/leave-calendar-month.component",["common/lodash","common/moment","leave-absences/shared/modules/components","common/services/pub-sub"],function(e,t,n){function a(n,a,o,s,r,i,c){function u(){var e=t().month(Q.month.month).year(Q.month.year);T(),D(),Q.month=d(e),o.$emit("LeaveCalendar::monthInjected")}function l(e){A([e]),Y(e)}function d(e){return{index:e.format("YYYY-MM"),month:e.month(),year:e.year(),name:e.format("MMMM"),loading:!0,days:m(e)}}function m(n){var a=t(),o=n.clone().startOf("month");return e.map(e.times(n.daysInMonth()),function(){var e={date:o.format("YYYY-MM-DD"),name:o.format("ddd"),index:o.format("D"),current:a.isSame(o,"day"),enabled:o.isSameOrAfter(Q.period.start_date)&&o.isSameOrBefore(Q.period.end_date),contactsData:{}};return o.add(1,"day"),e})}function f(e){return z[e]}function p(){return Q.showOnlyWithLeaveRequests?Q.contacts.filter(function(t){var n=Object.keys(X[t.id]||{}).length,a=e.includes(Q.showTheseContacts,t.id);return n||a}):Q.contacts}function v(e){return t(e,c.serverDateFormat)}function h(e){var t=g(e);t&&(x(t),Y(t))}function b(t){var n={request_type:"toil"};return e.some(t,n)&&!e.every(t,n)?e.filter(t,n):t}function g(t){var n;return e.find(X[t.contact_id],function(a){return n=e.find(a,function(e){return+e.id==+t.id})}),n}function y(){Q.month.days.forEach(function(e){e.contactsData={}})}function _(e){return CRM.url("civicrm/contact/view",{cid:e})}function q(t){return e.filter(t,function(e){return!!e.type_id})}function C(e,n){var a={};return n.forEach(function(n){a[n.id]={styles:H(n),isAccruedTOIL:P(n,"toil"),isRequested:I(n),isAM:R("half_day_am",n,e.date),isPM:R("half_day_pm",n,e.date),isSingleDay:t(n.from_date).isSame(n.to_date,"day")}}),a}function T(){Q.supportData.dayTypes=e.keyBy(Q.supportData.dayTypes,"name"),Q.supportData.leaveRequestStatuses=e.keyBy(Q.supportData.leaveRequestStatuses,"value"),Q.supportData.publicHolidays=e.transform(Q.supportData.publicHolidays,function(e,t){e[v(t.date).valueOf()]=t},{})}function A(e){return e.forEach(function(e){var t=L(e);X[e.contact_id]=X[e.contact_id]||{},t.forEach(function(t){X[e.contact_id][t.date]||(X[e.contact_id][t.date]=[]),X[e.contact_id][t.date].push(e)})}),a.resolve()}function D(){V.push(o.$on("LeaveCalendar::showMonth",U)),V.push(i.subscribe("LeaveRequest::new",l)),V.push(i.subscribe("LeaveRequest::edit",W)),V.push(i.subscribe("LeaveRequest::updatedByManager",W)),V.push(i.subscribe("LeaveRequest::delete",h)),V.push(i.subscribe("LeaveRequest::statusUpdate",function(e){"delete"===e.status?h(e.leaveRequest):W(e.leaveRequest)}))}function R(e,n,a){var o=Q.supportData.dayTypes[e];return t(a).isSame(n.from_date,"day")?o.value===n.from_date_type:t(a).isSame(n.to_date,"day")?o.value===n.to_date_type:void 0}function P(e,t){return e.request_type===t}function S(e){return!!Q.supportData.publicHolidays[v(e).valueOf()]}function I(t){var n=Q.supportData.leaveRequestStatuses[t.status_id].name;return e.includes([c.statusNames.awaitingApproval,c.statusNames.moreInformationRequired],n)}function L(n){for(var a=[],o=t(n.from_date).startOf("day"),s=t(n.to_date).startOf("day");o.isSameOrBefore(s);)o.month()===Q.month.month&&o.year()===Q.month.year&&a.push(e.find(Q.month.days,function(e){return e.date===o.format("YYYY-MM-DD")})),o.add(1,"day");return a}function O(t){var n=e.find(Q.supportData.leaveRequestStatuses,function(e){return e.name===t});return n?n.value:null}function M(){return[O(c.statusNames.approved),O(c.statusNames.adminApproved),O(c.statusNames.awaitingApproval),O(c.statusNames.moreInformationRequired)]}function w(){return Q.month.loading=!0,a.all([k(),$()]).then(B).then(N).then(function(){G=!0,Q.month.loading=!1})}function $(){var t=Q.supportData.absenceTypesToFilterBy.length>0,n={from_date:{to:Q.month.days[Q.month.days.length-1].date+" 23:59:59"},to_date:{from:Q.month.days[0].date+" 00:00:00"},status_id:{IN:M()},contact_id:{IN:Q.contacts.map(function(e){return e.id})},type_id:{IN:t?Q.supportData.absenceTypesToFilterBy:e.map(Q.supportData.absenceTypes,"id")}};return y(),r.all(n,null,null,null,!1).then(function(e){return X={},t&&(e.list=q(e.list)),A(e.list)})}function k(){var t=Q.month.days[0].date,n=Q.month.days[Q.month.days.length-1].date;return s.get(Q.contacts.map(function(e){return e.id}),t,n).then(function(t){z=e.keyBy(t,"contact_id")})}function B(){return Q.contactIdsToReduceTo&&(Q.contacts=Q.contacts.filter(function(t){return e.includes(Q.contactIdsToReduceTo,t.contact_id)||e.find(X,function(e){return e.contact_id===t.contact_id})})),a.resolve()}function x(t){var n=L(t);X[t.contact_id]=X[t.contact_id]||{},n.forEach(function(n){e.remove(X[t.contact_id][n.date],function(e){return e.id===t.id})})}function E(){o.$emit("LeaveCalendar::monthDestroyed"),V.map(function(e){e.remove?e.remove():e()})}function F(t,n,o){var s,r;return t.contactsData[n]=t.contactsData[n]||{},r=f(n),s=!0===o?a.resolve():a.all([r.isWeekend(v(t.date)),r.isNonWorkingDay(v(t.date))]).then(function(a){e.assign(t.contactsData[n],{isWeekend:a[0],isNonWorkingDay:a[1],isPublicHoliday:S(t.date)})}),s.then(function(){return X[n]&&X[n][t.date]?X[n][t.date]:[]}).then(function(a){a=j(a),e.assign(t.contactsData[n],{leaveRequests:a,leaveRequestsToShowInCell:b(a),leaveRequestsAttributes:C(t,a)})})}function N(){return a.all(Q.month.days.map(function(e){return a.all(Q.contacts.map(function(t){return F(e,t.id)}))}))}function U(e,t){Q.currentPage=0,Q.visible=!0,(t||!G)&&w()}function j(n){return e.sortBy(n,function(e){return+t(e.from_date).format("X")+(R("half_day_pm",e,e.from_date)?1:0)})}function H(t){var n=e.find(Q.supportData.absenceTypes,function(e){return e.id===t.type_id});return t.balance_change>0?{borderColor:n.color}:{borderColor:n.color,backgroundColor:n.color}}function W(e){h(e),-1!==M().indexOf(e.status_id)&&l(e)}function Y(e){return a.all(L(e).map(function(t){return F(t,e.contact_id,!0)}))}n.debug("Component: leave-calendar-month");var G=!1,V=[],z={},X={},Q=this;Q.currentPage=0,Q.pageSize=20,Q.visible=!1,Q.showContactName=!!Q.showContactName,Q.showOnlyWithLeaveRequests=!!Q.showOnlyWithLeaveRequests,Q.$onDestroy=E,Q.$onInit=u,Q.contactsList=p,Q.getContactUrl=_}n.component("leaveCalendarMonth",{bindings:{showTheseContacts:"<",contacts:"<",contactIdsToReduceTo:"<",month:"<",period:"<",showContactName:"<",showContactDetailsLink:"<",showOnlyWithLeaveRequests:"<",supportData:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-calendar-month.html"}],controllerAs:"month",controller:["$log","$q","$rootScope","Calendar","LeaveRequest","pubSub","shared-settings",a]})}),define("leave-absences/shared/modules/services",["common/angular","common/modules/services"],function(e){"use strict";return e.module("leave-absences.services",["common.services"])}),define("leave-absences/shared/services/leave-request.service",["common/lodash","leave-absences/shared/modules/services"],function(e,t){"use strict";function n(t,n,a){function o(){var t=n.defer();return a.open(e.defaults(s(),{onConfirm:function(){t.resolve(!0)}})),t.promise}function s(){return{title:"Recalculate Balance Change?",copyCancel:"Cancel",copyConfirm:"Yes",classConfirm:"btn-warning",msg:"The leave balance change has updated since this leave request was created. Do you want to recalculate the balance change?"}}return t.debug("LeaveRequest"),{getBalanceChangeRecalculationPromptOptions:s,promptBalanceChangeRecalculation:o}}t.factory("LeaveRequestService",n),n.$inject=["$log","$q","dialog"]}),
define("leave-absences/shared/components/leave-request-actions.component",["common/lodash","common/moment","leave-absences/shared/modules/components","common/models/contact","common/models/session.model","common/services/hr-settings","common/services/notification.service","common/services/pub-sub","leave-absences/shared/services/leave-request.service"],function(e,t,n){function a(n,a,o,s,r,i,c,u,l,d,m){function f(){a.resolve().then(_).then(C).then(function(){return y()&&"admin"!==O.role&&P()}).then(R).finally(function(){O.loading.component=!1})}function p(t){L=O.leaveRequest.status_id,e.includes(["cancel","reject","delete"],t)||"toil"===O.leaveRequest.request_type?r.open(q(t)):b(t)}function v(){return"admin"===O.role&&"public_holiday"===O.leaveRequest.request_type}function h(n){var a=O.absenceTypes[O.leaveRequest.type_id].allow_request_cancelation;return"admin"===O.role||("manager"===O.role?e.includes([M.awaitingApproval,M.moreInformationRequired],n):"3"===a?t().isBefore(O.leaveRequest.from_date):"2"===a)}function b(t){r.open({title:"Verifying balance...",loading:!0,optionsPromise:function(){return O.leaveRequest.checkIfBalanceChangeNeedsRecalculation().then(function(n){return n?e.assign(c.getBalanceChangeRecalculationPromptOptions(),{onCloseAfterConfirm:function(){A(t)}}):q(t)})}})}function g(){return s.find(I).then(function(e){return e.checkIfSelfLeaveApprover()})}function y(){return I===O.leaveRequest.contact_id}function _(){e.isArray(O.leaveRequestStatuses)&&(O.leaveRequestStatuses=e.keyBy(O.leaveRequestStatuses,"value")),e.isArray(O.absenceTypes)&&(O.absenceTypes=e.keyBy(O.absenceTypes,"id"))}function q(e){var t=w[e].dialog;return{title:"Confirm "+t.title+"?",copyCancel:"Cancel",copyConfirm:t.btnLabel,classConfirm:"btn-"+t.btnClass,msg:t.msg,onConfirm:function(){return O.leaveRequest[e]().then(function(){D(e)}).catch(function(e){d.error("Error:",e)})}}}function C(){return m.get().then(function(e){I=e.contactId})}function T(e,t){e.stopPropagation(),i.openModal(t)}function A(e){i.openModal({leaveRequest:O.leaveRequest,leaveType:O.leaveRequest.request_type,selectedContactId:O.leaveRequest.contact_id,forceRecalculateBalanceChange:!0,defaultStatus:l.statusNames[$[e]]})}function D(t){var n=e.find(O.leaveRequestStatuses,function(e){return e.name===l.statusNames.awaitingApproval}).value;L===n&&u.publish("ManagerBadge:: Update Count"),u.publish("LeaveRequest::statusUpdate",{status:t,leaveRequest:O.leaveRequest})}function R(){var t=O.leaveRequestStatuses[O.leaveRequest.status_id].name,n=e.compact(e.map(w,function(n,a){return e.includes(n.allowedStatuses,t)?a:null}));!h(t)&&e.pull(n,"cancel"),"admin"!==O.role&&e.pull(n,"delete"),"staff"===O.role&&e.pull(n,"approve","reject"),"staff"!==O.role&&S(n),v()&&n.push("delete"),O.allowedActions=e.map(n,function(e){return{key:e,label:w[e].label,isDirectAction:w[e].isDirectAction}})}function P(){return g().then(function(e){e&&(O.role="admin")})}function S(t){e.each(t,function(n,a){"edit"===n&&(t[a]="respond"),e.includes(["respond","view"],n)&&(t[a]="edit")})}n.debug("Component: leave-request-action-dropdown");var I,L,O=this,M=l.statusNames,w={edit:{label:"Edit",allowedStatuses:[M.awaitingApproval]},respond:{label:"Respond",allowedStatuses:[M.moreInformationRequired]},view:{label:"View",allowedStatuses:[M.approved,M.rejected,M.cancelled]},approve:{label:"Approve",isDirectAction:!0,allowedStatuses:[M.awaitingApproval],dialog:{title:"Approval",btnClass:"success",btnLabel:"Approve",msg:"Please confirm approval"}},reject:{label:"Reject",isDirectAction:!0,allowedStatuses:[M.awaitingApproval],dialog:{title:"Rejection",btnClass:"warning",btnLabel:"Reject",msg:"Please confirm rejection"}},cancel:{label:"Cancel",isDirectAction:!0,allowedStatuses:[M.awaitingApproval,M.approved,M.rejected,M.moreInformationRequired],dialog:{title:"Cancellation",btnClass:"danger",btnLabel:"Confirm",msg:"Please confirm cancellation"}},delete:{label:"Delete",isDirectAction:!0,allowedStatuses:[M.awaitingApproval,M.moreInformationRequired,M.approved,M.rejected,M.cancelled],dialog:{title:"Deletion",btnClass:"danger",btnLabel:"Confirm",msg:"This cannot be undone"}}},$={approve:"approved"};O.allowedActions=[],O.loading={component:!0},O.$onInit=f,O.action=p,O.openLeavePopup=T}n.component("leaveRequestActions",{bindings:{leaveRequest:"<",leaveRequestStatuses:"<",absenceTypes:"<",role:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-request-actions.html"}],controllerAs:"actions",controller:a}),a.$inject=["$log","$q","$rootScope","Contact","dialog","LeavePopup","LeaveRequestService","pubSub","shared-settings","notificationService","Session"]}),define("leave-absences/shared/components/leave-request-popup-comments-tab.component",["common/lodash","common/moment","leave-absences/shared/modules/components","common/services/hr-settings","common/models/session.model"],function(e,t,n){function a(n,a,o,s,r,i,c){function u(){o.$emit("LeaveRequestPopup::addTab",C),y(),_()}function l(){C.request.comments.push({contact_id:q,leave_request_id:C.request.id,text:C.comment.text}),C.comment.text=""}function d(){return C.comment.text.length>0}function m(e){return!e.comment_id||C.canManage}function f(e){return t.utc(e,r.serverDateTimeFormat).local().format(s.DATE_FORMAT.toUpperCase()+" HH:mm")}function p(){return C.request.comments.filter(function(e){return!e.toBeDeleted})}function v(e){return e===q?"Me":C.comment.contacts[e]?C.comment.contacts[e].display_name:void 0}function h(e){return C.mode===e}function b(){C.comment.text.length&&C.addComment()}function g(){var t=e.keyBy(C.request.comments,"contact_id"),n=Object.keys(t);return i.all({id:{IN:n}},{page:1,size:0}).then(function(t){C.comment.contacts=e.keyBy(t.list,"contact_id")})}function y(){return C.request.loadComments().then(function(){a.$broadcast("LeaveRequestPopup::requestObjectUpdated"),C.request.comments.length&&g()})}function _(){return C.loading.component=!0,c.get().then(function(e){q=e.contactId}).then(function(){C.loading.component=!1})}n.debug("Component: leave-request-popup-comments-tab");var q=null,C=this;C.loading={component:!0},C.comment={text:"",contacts:{}},C.$onInit=u,C.addComment=l,C.canRemoveComment=m,C.canSubmit=d,C.formatDateTime=f,C.getActiveComments=p,C.getCommentorName=v,C.isMode=h,C.onBeforeSubmit=b}n.component("leaveRequestPopupCommentsTab",{bindings:{canManage:"<",mode:"<",request:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-request-popup/leave-request-popup-comments-tab.html"}],controllerAs:"commentsCtrl",controller:["$log","$rootScope","$scope","HR_settings","shared-settings","Contact","Session",a]})}),define("leave-absences/shared/apis/work-pattern.api",["common/lodash","leave-absences/shared/modules/apis","common/services/api"],function(e,t){"use strict";t.factory("WorkPatternAPI",["$log","api",function(t,n){function a(t){var n=e.clone(t);return n.workPattern=n["api.WorkPattern.get"].values[0],delete n["api.WorkPattern.get"],n}return t.debug("WorkPatternAPI"),n.extend({assignWorkPattern:function(t,n,a,o,s,r){return this.sendPOST("ContactWorkPattern","create",e.assign({},r,{contact_id:t,pattern_id:n,effective_date:a,effective_end_date:o,change_reason:s})).then(function(e){return e.values})},get:function(e){return this.sendGET("WorkPattern","get",e||{}).then(function(e){return e.values})},getCalendar:function(n,a,o,s){return t.debug("WorkPatternAPI.getCalendar",n,a,o,s),this.sendGET("WorkPattern","getcalendar",e.assign({},s,{contact_id:e.isArray(n)?{IN:n}:n,start_date:a,end_date:o}))},unassignWorkPattern:function(e){return this.sendPOST("ContactWorkPattern","delete",{id:e})},workPatternsOf:function(t,n,o){return this.sendGET("ContactWorkPattern","get",e.assign({},n,{contact_id:t,"api.WorkPattern.get":{id:"$value.pattern_id"}}),o).then(function(e){return e=e.values,e.map(a)})}})}])}),define("leave-absences/shared/instances/calendar.instance",["common/lodash","common/moment","leave-absences/shared/modules/models-instances","common/models/option-group","common/models/instances/instance"],function(e,t,n){"use strict";n.factory("CalendarInstance",["$log","$q","ModelInstance","shared-settings","OptionGroup",function(n,a,o,s,r){function i(t,n){return u().then(function(a){var o=this.days[c(t).valueOf()];return!!o&&e.find(a,function(e){return e.name===n}).value===o.type}.bind(this))}function c(e){return t(e,s.serverDateFormat).clone()}function u(){return l=l||r.valuesOf("hrleaveandabsences_work_day_type")}var l;return o.extend({defaultCustomData:function(){return{days:[]}},isNonWorkingDay:function(e){return i.call(this,e,"non_working_day")},isWeekend:function(e){return i.call(this,e,"weekend")},isWorkingDay:function(e){return i.call(this,e,"working_day")},transformAttributes:function(t){var n={};return t.calendar.forEach(function(e){n[c(e.date).valueOf()]=e}),e(t).omit("calendar").assign({days:n}).value()}})}])}),define("leave-absences/shared/models/calendar.model",["common/lodash","leave-absences/shared/modules/models","common/models/model","leave-absences/shared/apis/work-pattern.api","leave-absences/shared/instances/calendar.instance"],function(e,t){"use strict";t.factory("Calendar",["$log","Model","WorkPatternAPI","CalendarInstance",function(t,n,a,o){return t.debug("Calendar"),n.extend({get:function(n,s,r,i){return t.debug("Calendar.get"),a.getCalendar(n,s,r,i).then(function(t){var a=t.values.map(function(e){return o.init(e)});return e.isArray(n)?a:a[0]})}})}])}),define("leave-absences/shared/components/leave-request-popup-details-tab.component",["common/lodash","common/moment","leave-absences/shared/modules/components","common/models/session.model","leave-absences/shared/models/calendar.model"],function(e,t,n){function a(n,a,o,s,r,i,c,u,l,d,m){function f(){n("RequestModalDetails"+e.capitalize(T(ne.leaveType,ne.request))+"Controller",{detailsController:ne}),ne.canManage=ne.isRole("manager")||ne.isRole("admin"),ne.loading.tab=!0,s.$emit("LeaveRequestPopup::addTab",ne),I(),ne.initChildController().then(function(){return r.all([B(),k()])}).then(!ne.isMode("create")&&S).then(Y).then(function(){if(!ne.isMode("create"))return r.resolve().then(ne.initTimesExtended).then(z)}).then(!ne.isMode("create")&&W).then(L).then(G).then(P).then(O).then(!ne.isMode("view")&&ne.initWatchersExtended).catch(R).then(function(){ne.pagination.filteredbreakdown=ne.balance.change.breakdown,ne.pagination.totalItems=ne.balance.change.breakdown.length}).finally(function(){ne.loading.tab=!1})}function p(){ne.balance.closing=ne.balance.opening+ne.balance.change.amount}function v(e){return t(e,c.serverDateFormat).toDate()}function h(e){return t(e).format(c.serverDateFormat)}function b(e){var t;return r.resolve().then(function(){j(e),"from"===e&&U(),M("hours")&&(_(e),"from"!==e||ne.uiOptions.multipleDays||_("to")),ne.loading[e+"DayTypes"]=!0}).then(function(){return C(e)}).then(function(e){if(t=e.id!==ne.period.id,t&&(ne.period=e),!ne.period.id)return r.reject("Please change date as it is not in any absence period")}).then(W).then(function(){if(t)return B()}).then(function(){return ne.onDateChangeExtended&&ne.onDateChangeExtended(e)}).then(function(){if(z(),!t)return E();o.$broadcast("LeaveRequestPopup::absencePeriodChanged")}).catch(R).finally(q)}function g(){return z(),E()}function y(){return ne.uiOptions.toDate=null,j("to"),r.resolve().then(z).then(ne.setDaysSelectionModeExtended).then(q).then(!ne.uiOptions.multipleDays&&E)}function _(e){ne.uiOptions.times[e].loading=!0}function q(){["from","to"].forEach(function(e){ne.loading[e+"DayTypes"]=!1,M("hours")&&(ne.uiOptions.times[e].loading=!1)})}function C(n){var a=t(ne.uiOptions[n+"Date"]).format(ne.uiOptions.userDateFormat.toUpperCase());return e.find(ne.absencePeriods,function(e){return e.isInPeriod(a)})||{}}function T(){return ne.request?ne.request.request_type:ne.leaveType||null}function A(e){return t().set({hours:e.split(":")[0],minutes:e.split(":")[1]})}function D(){return X(),ne.loading.balanceChange=!0,ne.request.getBalanceChangeBreakdown().then(H).catch(R)}function R(t){o.$broadcast("LeaveRequestPopup::handleError",e.isArray(t)?t:[t]),ne.loading.fromDayTypes=!1,ne.loading.balanceChange=!1,ne.loading.tab=!1,ne.loading.toDayTypes=!1}function P(){return ne.isMode("create")||ne.forceRecalculateBalanceChange?E():D()}function S(){var e=ne.request.attributes();return ne.uiOptions.fromDate=v(ne.request.from_date),ne.request.to_date=e.to_date,ne.request.to_date_type=e.to_date_type,ne.uiOptions.toDate=v(ne.request.to_date),ne.initDayTypesExtended?ne.initDayTypesExtended():r.resolve()}function I(){te.push(o.$on("LeaveRequestPopup::absenceTypeChanged",function(){J()}),o.$on("LeaveRequestPopup::absencePeriodBalancesUpdated",function(e,t){K(t)}),o.$on("LeaveRequestPopup::recalculateBalanceChange",E))}function L(){ne.isMode("edit")&&(ne.isLeaveStatus(c.statusNames.approved)||ne.isLeaveStatus(c.statusNames.adminApproved))&&(ee={absenceTypeId:ne.request.type_id,value:ne.selectedAbsenceType.remainder-ne.request.balance_change})}function O(){o.$watch(function(){return ne.uiOptions.times.from.time},function(e,t){e!==t&&(ne.uiOptions.multipleDays||(Z(e),z()))})}function M(e){return ne.selectedAbsenceType.calculation_unit_name===e}function w(e){return ne.request.request_type===e}function $(t){return e.includes(["weekend","non_working_day","public_holiday"],t)}function k(){return l.valuesOf("hrleaveandabsences_leave_request_day_type").then(function(e){ne.requestDayTypes=e})}function B(){return u.get(ne.request.contact_id,ne.period.start_date,ne.period.end_date).then(function(e){ne.calendar=e})}function x(){var e=(ne.pagination.currentPage-1)*ne.pagination.numPerPage,t=e+ne.pagination.numPerPage;ne.pagination.filteredbreakdown=ne.balance.change.breakdown.slice(e,t)}function E(){return X(),ne.canCalculateChange()?(ne.loading.balanceChange=!0,ne.request.change_balance=!0,ne.calculateBalanceChange().then(H).catch(R).finally(function(){ne.loading.balanceChange=!1})):r.resolve()}function F(){ne.pagination.totalItems=ne.balance.change.breakdown.length,ne.pagination.filteredbreakdown=ne.balance.change.breakdown,ne.pagination.pageChanged()}function N(){return h(ne.request.from_date)===h(ne.request.to_date)}function U(){ne.uiOptions.toDate&&ne.uiOptions.fromDate&&ne.uiOptions.multipleDays&&t(ne.uiOptions.toDate).isSameOrBefore(ne.uiOptions.fromDate)&&(ne.uiOptions.toDate=null,j("to"))}function j(e){ne.resetUIInputsExtended&&ne.resetUIInputsExtended(e),z(),X()}function H(e){ne.balance.change=e,ne.request.balance_change=e.amount,p(),F(),ne.loading.balanceChange=!1}function W(){var e,n,a;ne.uiOptions.fromDate?(e=t(ne.uiOptions.fromDate).add(1,"day").toDate(),a=e,n=e):(a=v(ne.period.start_date),n=ne.uiOptions.date.to.options.minDate),ne.uiOptions.date.to.options.initDate=n,ne.uiOptions.date.to.options.minDate=a,ne.uiOptions.date.to.options.maxDate=v(ne.period.end_date)}function Y(){return!ne.isMode("create")&&N()||ne.isMode("create")&&(w("sickness")||M("hours"))?ne.uiOptions.multipleDays=!1:ne.uiOptions.multipleDays=!0,r.resolve().then(ne.setDaysSelectionModeExtended)}function G(){ee&&ee.absenceTypeId===ne.selectedAbsenceType.id?ne.balance.opening=ee.value||0:ne.balance.opening=ne.selectedAbsenceType.remainder}function V(){ne.selectedAbsenceType=e.find(ne.absenceTypes,function(e){return e.id===ne.request.type_id})}function z(){var e=ne.uiOptions,t=e.times;ne.request.from_date=e.fromDate?h(e.fromDate):null,ne.request.to_date=e.toDate?h(e.toDate):null,!e.multipleDays&&e.fromDate&&(ne.request.to_date=ne.request.from_date,ne.request.to_date_type=ne.request.from_date_type),(M("hours")||w("toil"))&&(ne.request.from_date=ne.request.from_date&&t.from.time?ne.request.from_date+" "+t.from.time:null,ne.request.to_date=ne.request.to_date&&t.to.time?ne.request.to_date+" "+t.to.time:null)}function X(){ne.uiOptions.showBalance=ne.canCalculateChange()}function Q(){e.forEach(te,function(e){e()})}function J(){var e,t=ne.selectedAbsenceType.calculation_unit_name;return V(),e=t!==ne.selectedAbsenceType.calculation_unit_name,G(),r.resolve().then(e&&Y).then(e&&ne.onAbsenceTypeUpdateExtended).then(e&&z).then(q).then(E)}function K(e){return ne.absenceTypes=e,V(),t(ne.uiOptions.toDate).isAfter(ne.period.end_date)&&(ne.uiOptions.toDate=void 0,j("to")),G(),E()}function Z(e){var t=A(e).add(ne.uiOptions.time_interval,"minutes");t.isAfter(A(ne.uiOptions.times.to.max))||(ne.uiOptions.times.to.min=t.format("HH:mm"),t.isAfter(A(ne.uiOptions.times.to.time))&&(ne.uiOptions.times.to.time=""))}a.debug("Component: leave-request-popup-details-tab");var ee=null,te=[],ne=this;ne.canManage=!1,ne.calendar={},ne.errors=[],ne.isRequired=!0,ne.requestDayTypes=[],ne.statusNames=c.statusNames,ne.loading={tab:!1,balanceChange:!1,fromDayTypes:!1,toDayTypes:!1},ne.pagination={currentPage:1,filteredbreakdown:[],numPerPage:7,totalItems:0,pageChanged:x},ne.uiOptions={isChangeExpanded:!1,multipleDays:!0,userDateFormat:i.DATE_FORMAT,showBalance:!1,date:{from:{show:!1,options:{startingDay:1,showWeeks:!1}},to:{show:!1,options:{minDate:null,maxDate:null,startingDay:1,showWeeks:!1}},expiry:{show:!1,options:{minDate:null,maxDate:null,startingDay:1,showWeeks:!1}}},times:{from:{amount:0,amountExpanded:!1,loading:!1,max:"00:00",maxAmount:0,min:"00:00",time:""},to:{amount:0,amountExpanded:!1,loading:!1,max:"00:00",maxAmount:0,min:"00:00",time:""}},time_interval:15},ne.$onInit=f,ne.convertDateFormatFromServer=v,ne.convertDateToServerFormat=h,ne.dateChangeHandler=b,ne.dateTypeChangeHandler=g,ne.daysSelectionModeChangeHandler=y,ne.disableAndShowLoadingTimeInput=_,ne.getMomentDateWithGivenTime=A,ne.handleError=R,ne.isCalculationUnit=M,ne.isLeaveType=w,ne.isNotWorkingDay=$,ne.performBalanceChangeCalculation=E,ne.setRequestDateTimesAndDateTypes=z,ne.updateEndTimeInputMinTime=Z,ne.$onDestroy=Q}n.component("leaveRequestPopupDetailsTab",{bindings:{absencePeriods:"<",absenceTypes:"<",balance:"=",request:"<",isLeaveStatus:"<",leaveType:"<",isMode:"<",isSelfRecord:"<",period:"=",isRole:"<",selectedAbsenceType:"=",forceRecalculateBalanceChange:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-request-popup/leave-request-popup-details-tab.html"}],controllerAs:"detailsTab",controller:a}),a.$inject=["$controller","$log","$rootScope","$scope","$q","HR_settings","shared-settings","Calendar","OptionGroup","LeaveRequest","$timeout"]}),define("leave-absences/shared/components/leave-request-popup-files-tab",["common/lodash","common/moment","leave-absences/shared/modules/components","common/services/file-upload","common/services/file-mime-types","common/services/hr-settings"],function(e,t,n){function a(n,a,o,s,r,i,c,u,l){function d(){o.$broadcast("LeaveRequestPopup::childComponent::register"),s.$emit("LeaveRequestPopup::addTab",O),y(),a.all([A(),C()]).then(_).finally(function(){O.filesLoaded=!0})}function m(){return O.fileUploader&&O.fileUploader.queue.length>0}function f(){return O.getFilesAmount()<i.fileUploader.queueLimit}function p(e){return t(e,i.serverDateTimeFormat).format(O.userDateFormat.toUpperCase()+" HH:mm")}function v(e){return e===O.request.contact_id?"Me -":""}function h(){var e=b(),t=g();return O.request.files.length+t.length-e.length}function b(){return e.filter(O.request.files,function(e){return e.toBeDeleted})}function g(){return O.fileUploader&&O.fileUploader.queue?O.fileUploader.queue:[]}function y(){I.push(o.$on("LeaveRequestPopup::submit",P))}function _(){T().then(function(){O.fileUploader=u.uploader({entityTable:"civicrm_hrleaveandabsences_leave_request",crmAttachmentToken:i.attachmentToken,queueLimit:i.fileUploader.queueLimit,allowedMimeTypes:L})})}function q(){return S.length>0?S.map(function(e){return e.label}).join(", "):""}function C(){return O.request.loadAttachments().then(function(){o.$broadcast("LeaveRequestPopup::requestObjectUpdated")})}function T(){return a.all(S.map(function(e){return l.getMimeTypeFor(e.label).then(function(t){L[e.label]=t})})).catch(function(){L=null})}function A(){return c.valuesOf("safe_file_extension").then(function(e){S=e})}function D(e){return!e.attachment_id||O.canManage}function R(){e.forEach(I,function(e){e()})}function P(e,t){O.fileUploader.queue&&O.fileUploader.queue.length>0?O.fileUploader.uploadAll({entityID:O.request.id}).then(function(){t()}).catch(t):t()}n.debug("Component: leave-request-popup-files-tab");var S=[],I=[],L={},O=Object.create(this);return O.filesLoaded=!1,O.fileUploader=null,O.today=Date.now(),O.userDateFormatWithTime=r.DATE_FORMAT+" HH:mm",O.userDateFormat=r.DATE_FORMAT,O.$onDestroy=R,O.$onInit=d,O.canRemoveAttachment=D,O.canSubmit=m,O.canUploadMore=f,O.formatDateTime=p,O.getAuthorName=v,O.getFilesAmount=h,O.listFileTypes=q,O}n.component("leaveRequestPopupFilesTab",{bindings:{canManage:"<",mode:"<",request:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-request-popup/leave-request-popup-files-tab.html"}],controllerAs:"filesTab",controller:["$log","$q","$rootScope","$scope","HR_settings","shared-settings","OptionGroup","FileUpload","fileMimeTypes",a]})}),define("leave-absences/shared/components/leave-request-record-actions.component",["leave-absences/shared/modules/components","common/services/hr-settings","common/services/before-hash-query-params.service"],function(e){function t(e,t,n){function a(){s=n.parse(),s.openModal&&o({leaveType:s.openModal,selectedContactId:r.selectedContactId})}function o(e){t.openModal(e)}e.debug("Component: leave-request-record-actions");var s,r=this;r.leaveRequestOptions=[{type:"leave",icon:"briefcase",label:"Leave"},{type:"sickness",icon:"stethoscope",label:"Sickness"}],r.$onInit=a,r.openLeavePopup=o}e.component("leaveRequestRecordActions",{bindings:{contactId:"<",selectedContactId:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/leave-request-record-actions.html"}],controllerAs:"vm",controller:["$log","LeavePopup","beforeHashQueryParams",t]})}),define("leave-absences/shared/components/manage-leave-requests.component",["common/lodash","leave-absences/shared/modules/components","common/models/contact","common/services/pub-sub"],function(e,t){function n(t,n,a,o,s,r,i,c,u,l,d,m){"use strict";function f(){s(i.permissions.admin.administer).then(function(e){H.isAdmin=e,n.all([A(),D(),M(),P(),L(),I(),w()]).then(function(){H.loading.page=!1,R()}),U()})}function p(){H.filters.leaveRequest.contact_id=null,H.refresh()}function v(){var e=H.filters.contact;return{department:e.department,level_type:e.level_type,location:e.location,region:e.region}}function h(e){return"all"===e.name||""===e?H.leaveRequests.filter.list.length:H.leaveRequests.filter.list.filter(function(t){return t.status_id===e.value}).length}function b(t){return e.find(H.absenceTypes,{id:t})}function g(e){return new Array(e||0)}function y(t){var n=e.find(H.leaveRequestStatuses,function(e){return e.value===t});return n?n.label:null}function _(e){switch(e){case i.statusNames.approved:return"badge-success";case i.statusNames.rejected:return"badge-danger";case i.statusNames.cancelled:case"all":return"";default:return"badge-primary"}}function q(t){return e.find(H.leaveRequestStatuses,function(e){return e.name===t}).value}function C(t){var n=e.find(H.filteredUsers,function(e){return e.id===t});return n?n.display_name:null}function T(e){return e.current?"Current Period ("+e.title+")":e.title}function A(){return c.all().then(function(t){H.absencePeriods=e.sortBy(t,"start_date"),H.filters.leaveRequest.selectedPeriod=e.find(H.absencePeriods,function(e){return!!e.current})})}function D(){return u.all().then(u.loadCalculationUnits).then(function(e){H.absenceTypes=e})}function R(e){return(H.isAdmin?o.all(v()):o.leaveManagees(H.contactId,v())).then(function(t){return H.filteredUsers=H.isAdmin?t.list:t,e?S(e):n.all([S("table"),S("filter")])}).then(function(){H.filters.leaveRequest.leaveStatus!==W&&0===H.leaveRequests.table.list.length&&H.refresh(1,!0)})}function P(){return r.valuesOf("hrjc_department").then(function(e){H.departments=e})}function S(e){var t="filter"!==e,n="table"===e?e:"content",a="filter"===e?{size:0}:H.pagination,o="filter"===e?{return:["status_id"]}:{};return H.loading[n]=!0,l.all(O(t),a,"from_date DESC",o,!1).then(function(t){H.leaveRequests[e]=t}).catch(function(){H.leaveRequests[e].list=[]}).finally(function(){H.loading[n]=!1})}function I(){return r.valuesOf("hrjc_level_type").then(function(e){H.levelTypes=e})}function L(){return r.valuesOf("hrjc_location").then(function(e){H.locations=e})}function O(t){var n=H.filters.leaveRequest;return{contact_id:k(),managed_by:H.isAdmin&&"me"!==n.assignedTo.type?void 0:H.contactId,status_id:x(t),type_id:n.selectedAbsenceTypes?n.selectedAbsenceTypes.id:{IN:e.map(H.absenceTypes,"id")},from_date:{from:n.selectedPeriod.start_date},to_date:{to:n.selectedPeriod.end_date},unassigned:"unassigned"===n.assignedTo.type||void 0}}function M(){return r.valuesOf("hrjc_region").then(function(e){H.regions=e})}function w(){return r.valuesOf("hrleaveandabsences_leave_request_status").then(function(e){H.leaveRequestStatuses=e.concat(H.leaveRequestStatuses)})}function $(e){d.openModal(e)}function k(){return H.filteredUsers.length>0&&H.filters.leaveRequest.contact_id?H.filters.leaveRequest.contact_id:{IN:H.filteredUsers.map(function(e){return e.id})}}function B(e){var t=[q(i.statusNames.moreInformationRequired),q(i.statusNames.awaitingApproval)];return 0===e.length&&(e=e.concat(t)),e}function x(e){var t=H.filters.leaveRequest,n=[];if(e&&t.leaveStatus&&t.leaveStatus.value&&n.push(t.leaveStatus.value),t.pending_requests&&(n=B(n)),n.length)return{IN:n}}function E(e,t,n){e="number"==typeof e?e:1,t&&(H.filters.leaveRequest.leaveStatus=W),(e<=H.totalNoOfPages()||0===H.totalNoOfPages())&&(H.pagination.page=e,R(n))}function F(e){H.filters.leaveRequest.leaveStatus=e,H.refresh(1,!1,"table")}function N(e){H.filters.leaveRequest.assignedTo=e,H.refresh()}function U(){m.subscribe("LeaveRequest::updatedByManager",function(){H.refresh()}),m.subscribe("LeaveRequest::new",function(){H.refresh()}),m.subscribe("LeaveRequest::edit",function(){H.refresh()}),m.subscribe("LeaveRequest::delete",function(){H.refresh()}),m.subscribe("LeaveRequest::statusUpdate",function(){H.refresh()})}function j(){return Math.ceil(H.leaveRequests.table.total/H.pagination.size)}t.debug("Component: manage-leave-requests");var H=this,W={name:"all",label:"All"};H.absencePeriods=[],H.absenceTypes=[],H.filteredUsers=[],H.isFilterExpanded=!1,H.isAdmin=!1,H.leaveRequests={table:{list:[]},filter:{list:[]}},H.leaveRequestStatuses=[W],H.loading={content:!0,page:!0,table:!0},H.pagination={page:1,size:7},H.filtersByAssignee=[{type:"me",label:"Assigned To Me"},{type:"unassigned",label:"Unassigned"},{type:"all",label:"All"}],H.filters={contact:{department:null,level_type:null,location:null,region:null},leaveRequest:{leaveStatus:H.leaveRequestStatuses[0],pending_requests:!0,contact_id:null,selectedPeriod:null,selectedAbsenceTypes:null,assignedTo:H.filtersByAssignee[0]}},H.$onInit=f,H.clearStaffSelection=p,H.countLeaveRequestByStatus=h,H.getAbsenceTypeByID=b,H.getArrayOfSize=g,H.getLeaveStatusByValue=y,H.getNavBadge=_,H.getUserNameByID=C,H.labelPeriod=T,H.openLeavePopup=$,H.refresh=E,H.refreshWithFilter=F,H.refreshWithFilterByAssignee=N,H.totalNoOfPages=j}t.component("manageLeaveRequests",{bindings:{contactId:"<"},templateUrl:["shared-settings",function(e){return e.sharedPathTpl+"components/manage-leave-requests.html"}],controllerAs:"vm",controller:n}),n.$inject=["$log","$q","$rootScope","Contact","checkPermissions","OptionGroup","shared-settings","AbsencePeriod","AbsenceType","LeaveRequest","LeavePopup","pubSub"]}),define("leave-absences/shared/controllers/sub-controllers/request-modal-details-leave.controller",["common/lodash","common/moment","leave-absences/shared/modules/controllers"],function(e,t,n){function a(n,a,o,s,r,i,c){function u(){return r.request.calculateBalanceChange(r.selectedAbsenceType.calculation_unit_name)}function l(){var e=r.request,t=!!e.from_date&&!!e.to_date,n=r.selectedAbsenceType.calculation_unit_name;return"days"===n?t=t&&!!e.from_date_type&&!!e.to_date_type:"hours"===n&&(t=t&&!isNaN(+e.from_date_amount)&&!isNaN(+e.to_date_amount)),t}function d(){return r.canCalculateChange()}function m(t,n){var a=r.uiOptions.times[t],o=e.clone(n.time_from),s=e.clone(n.time_to);r.uiOptions.multipleDays||("from"===t&&s&&o&&(s=r.getMomentDateWithGivenTime(s).subtract(r.uiOptions.time_interval,"minutes").format("HH:mm")),"to"===t&&o&&s&&(o=r.getMomentDateWithGivenTime(o).add(r.uiOptions.time_interval,"minutes").format("HH:mm"))),a.min=o||"00:00",a.max=s||"00:00",a.time="to"===t?a.max:a.min}function f(t,n){return t?(t=r.convertDateToServerFormat(t),h(t).then(function(n){return n?r.requestDayTypes.filter(function(e){return"public_holiday"===e.name}):p(t,r.requestDayTypes).then(function(t){return t.length?t:r.requestDayTypes.filter(function(t){return e.includes(["all_day","half_day_am","half_day_pm"],t.name)})})}).then(function(e){return S(n,e),e})):o.reject([])}function p(e,n){return e=t(e),o.all([r.calendar.isNonWorkingDay(e),r.calendar.isWeekend(e)]).then(function(e){return e[0]?"non_working_day":e[1]?"weekend":null}).then(function(e){return e?n.filter(function(t){return t.name===e}):[]})}function v(e,n){return t.duration(n).subtract(t.duration(e)).asHours()}function h(e){return c.all({public_holiday:1,contact_id:r.request.contact_id,from_date:{from:e},to_date:{to:e}}).then(function(e){return!!e.list.length})}function b(){return o.resolve()}function g(){return A(r.uiOptions.fromDate,"from").then(function(){return A(r.uiOptions.toDate,"to")})}function y(e){s.$watch(function(){return r.uiOptions.times[e].amount},function(e,t){r.isCalculationUnit("days")||+e==+t||(r.isRole("staff")&&(r.request.change_balance=!0),O(),r.performBalanceChangeCalculation())})}function _(e){var n=t(r.request[e+"_date"]).format("HH:mm"),a=r.uiOptions.times[e];(v(a.min,n)<=0||v(a.max,n)>=0)&&(n="from"===e?a.min:a.max),r.uiOptions.times[e].time=n}function q(){var e=r.uiOptions.multipleDays?["from","to"]:["from"],t=r.uiOptions.times;if(r.isCalculationUnit("hours"))return o.all(e.map(R)).then(function(){["from","to"].forEach(function(e){_(e),L(e),t[e].amount=Math.min(r.request[e+"_date_amount"],t[e].maxAmount).toString()}),r.uiOptions.multipleDays||r.updateEndTimeInputMinTime(r.uiOptions.times.from.time)}).then(O)}function C(){["from","to"].forEach(function(e){y(e),T(e)})}function T(e){s.$watch(function(){return r.uiOptions.times[e].time},function(t,n){r.isCalculationUnit("days")||t===n||(r.setRequestDateTimesAndDateTypes(),t&&L(e,!0))})}function A(e,t){return f(e,t).then(function(){r.loading[t+"DayTypes"]=!1})}function D(e){return A(r.uiOptions[e+"Date"],e).then(function(){if(r.isCalculationUnit("hours"))return R(e).then(function(){L(e,!0)})})}function R(e){var t=r.uiOptions[e+"Date"],n=!r.uiOptions.multipleDays;return t?r.request.getWorkDayForDate(r.convertDateToServerFormat(t)).then(function(t){w[e]=t,m(e,t),n&&"from"===e&&m("to",t)}).catch(function(t){return w[e]={},r.handleError(t)}).finally(function(){r.uiOptions.times[e].loading=!1,n&&(r.uiOptions.times.to.loading=!1)}):o.resolve()}function P(t){var n=r.uiOptions.times[t];r["request"+e.startCase(t)+"DayTypes"]=[],n.time="",n.min="00:00",n.max="00:00",n.amount="0",n.maxAmount="0"}function S(t,n){var a="request"+e.startCase(t)+"DayTypes";r[a]=n,r.isMode("create")&&(r.request[t+"_date_type"]=r[a][0].value)}function I(){return r.isCalculationUnit("hours")&&r.uiOptions.fromDate?(r.disableAndShowLoadingTimeInput("from"),!r.uiOptions.multipleDays&&r.disableAndShowLoadingTimeInput("to"),R("from").then(function(){L("from",!0)})):o.resolve()}function L(e,t){var n=r.uiOptions,a=n.multipleDays?e:"from",o=n.times[a],s=n.multipleDays&&"to"===a?o.min:n.times.from.time,i=n.multipleDays&&"from"===a?o.max:n.times.to.time,c=w[a].number_of_hours?v(s,i).toString():"0";o.maxAmount=c,t&&(o.amount=o.maxAmount)}function O(){var e=r.uiOptions.times
;r.request.from_date_amount=isNaN(+e.from.amount)?null:e.from.amount,r.request.to_date_amount=isNaN(+e.to.amount)?null:e.to.amount}function M(){return r.isCalculationUnit("hours")&&r.uiOptions.fromDate?R("from").then(function(){L("from",!0)}):o.resolve()}var w={};a.debug("RequestModalDetailsLeaveController"),r.calculateBalanceChange=u,r.canCalculateChange=l,r.canSubmit=d,r.initChildController=b,r.initDayTypesExtended=g,r.initTimesExtended=q,r.initWatchersExtended=C,r.onAbsenceTypeUpdateExtended=M,r.onDateChangeExtended=D,r.resetUIInputsExtended=P,r.setDaysSelectionModeExtended=I}n.controller("RequestModalDetailsLeaveController",a),a.$inject=["$controller","$log","$q","$rootScope","detailsController","PublicHoliday","LeaveRequest"]}),define("leave-absences/shared/controllers/sub-controllers/request-modal-details-sickness.controller",["common/lodash","leave-absences/shared/modules/controllers"],function(e,t){function n(t,n,a,o,s,r,i){function c(){return!(!i.canCalculateChange()||!i.request.sickness_reason)}function u(){return a.all([m(),v(),f(!0)])}function l(t){var n=i.request.getDocumentArray();return!!e.find(n,function(e){return e===t})}function d(t){return!!e.find(i.sicknessDocumentTypes,function(e){return e.value===t})}function m(){return r.valuesOf("hrleaveandabsences_leave_request_required_document").then(function(e){i.sicknessDocumentTypes=e})}function f(t){return r.valuesOf("hrleaveandabsences_sickness_reason",t).then(function(t){i.sicknessReasons=e.keyBy(t,"name")})}function p(){s.loadForm("/civicrm/admin/options/hrleaveandabsences_sickness_reason?reset=1").on("crmUnload",function(){f(!1)})}function v(){i.showSicknessOptionsEditorIcon=e.includes(["admin-dashboard","absence-tab"],o.section)}n.debug("RequestModalDetailsSicknessController"),t("RequestModalDetailsLeaveController",{detailsController:i}),i.canSubmit=c,i.initChildController=u,i.isChecked=l,i.isDocumentInRequest=d,i.openSicknessReasonOptionsEditor=p}t.controller("RequestModalDetailsSicknessController",n),n.$inject=["$controller","$log","$q","$rootScope","crmAngService","api.optionGroup","detailsController"]}),define("leave-absences/shared/controllers/sub-controllers/request-modal-details-toil.controller",["common/lodash","common/moment","leave-absences/shared/modules/controllers"],function(e,t,n){function a(n,a,o,s,r,i,c){function u(){return c.balance.change.amount=+c.request.toil_to_accrue,a.resolve(c.balance.change)}function l(){if(!c.request.from_date||!c.request.to_date)return c.uiOptions.max_toil_duration_and_accrual=null,void(c.uiOptions.toil_duration_in_hours=null);c.uiOptions.max_toil_duration_and_accrual=t.duration(t(c.request.to_date).diff(c.request.from_date)).asHours()}function d(){return h().catch(function(e){return e.length&&(c.errors=e),a.reject(e)}).then(function(e){return i.calculateToilExpiryDate(c.request.type_id,e)}).then(function(e){return c.request.toil_expiry_date=e,c.uiOptions.expiryDate=new Date(e),e})}function m(){return!!c.request.toil_to_accrue}function f(){var e=c.uiOptions.multipleDays&&!!c.request.to_date,t=!c.uiOptions.multipleDays&&!!c.request.from_date,n=t||e,a=U.from_date!==c.request.from_date||U.to_date!==c.request.to_date;return c.canDisplayToilExpirationField&&n&&H.hasExpirationFromAdminSettings&&a}function p(){return!!(c.request.from_date&&c.request.to_date&&c.request.toil_duration&&c.request.toil_to_accrue)}function v(){c.request.toil_expiry_date=!1,c.uiOptions.expiryDate=null}function h(){var e=c.uiOptions.multipleDays,t=c.request;return b({hasErrors:e?!t.to_date&&!t.from_date:!t.from_date,label:e?"To Date":"From Date",value:t.to_date})}function b(e){if(e.hasErrors){var n="Please select "+e.label+" to find expiry date";return a.reject([n])}return e.value?a.resolve(t(e.value).format("YYYY-MM-DD")):a.reject([])}function g(){var e=c.isMode("create")&&H.hasExpirationFromAdminSettings,t=H.hasPreviousExpirationDate,n=c.isLeaveType("toil"),a=c.canManage;c.canDisplayToilExpirationField=n&&(a||e||t)}function y(){c.uiOptions.toil_duration_in_hours=c.request.toil_duration/60}function _(){return H.hasPreviousExpirationDate=c.isMode("edit")&&!!c.request.toil_expiry_date,i.canExpire(c.request.type_id).then(function(e){H.hasExpirationFromAdminSettings=e})}function q(){return c.request.to_date_type=c.request.from_date_type="1",_().then(g).then(C).then(S)}function C(){c.canManage&&(c.uiOptions.expiryDate=c.convertDateFormatFromServer(c.request.toil_expiry_date))}function T(){o.$watch(function(){return c.request.toil_to_accrue},function(e,t){+e!=+t&&c.performBalanceChangeCalculation()})}function A(){o.$watch(function(){return c.uiOptions.toil_duration_in_hours},function(e,t){e!==t&&c.isCalculationUnit("hours")&&M(),c.request.toil_duration=c.uiOptions.toil_duration_in_hours?60*c.uiOptions.toil_duration_in_hours:null})}function D(){var e=c.uiOptions.times;e.from.time=t(c.request.from_date).format("HH:mm"),e.to.time=t(c.request.to_date).format("HH:mm"),c.uiOptions.multipleDays||c.updateEndTimeInputMinTime(c.uiOptions.times.from.time)}function R(){["from","to"].forEach(function(e){o.$watch(function(){return c.uiOptions.times[e].time},function(e,t){e!==t&&(c.setRequestDateTimesAndDateTypes(),F(),l(),w())})})}function P(){c.isMode("view")||(T(),A(),R())}function S(t){return r.valuesOf("hrleaveandabsences_toil_amounts",t).then(function(t){c.toilAmounts=e.sortBy(t,function(e){return+e.weight})})}function I(){return l(),w(),F()}function L(){return k(),c.uiOptions.multipleDays||c.updateEndTimeInputMinTime(c.uiOptions.times.from.time),l(),j?j=!1:w(),F()}function O(e){c.uiOptions.times[e].time=""}function M(){c.request.toil_to_accrue=c.uiOptions.toil_duration_in_hours}function w(){c.uiOptions.toil_duration_in_hours=c.uiOptions.max_toil_duration_and_accrual}function $(){U=e.cloneDeep(c.request.attributes())}function k(){c.uiOptions.multipleDays?["from","to"].forEach(function(e){c.uiOptions.times[e].min="00:00",c.uiOptions.times[e].max="23:45"}):(c.uiOptions.times.from.min="00:00",c.uiOptions.times.from.max="23:30",c.uiOptions.times.to.min="00:15",c.uiOptions.times.to.max="23:45")}function B(){c.setRequestDateTimesAndDateTypes(),l(),w(),c.isCalculationUnit("hours")?M():c.request.toil_to_accrue=null}function x(){s.loadForm("/civicrm/admin/options/hrleaveandabsences_toil_amounts?reset=1").on("crmUnload",function(){S(!1)})}function E(){c.showTOILAccrualsOptionEditorIcon=e.includes(["admin-dashboard","absence-tab"],o.section)}function F(){return f()?d().catch(a.resolve):a.resolve()}function N(){c.uiOptions.expiryDate&&(c.request.toil_expiry_date=c.convertDateToServerFormat(c.uiOptions.expiryDate))}n.debug("RequestModalDetailsToilController");var U,j=!c.isMode("create"),H={hasPreviousExpirationDate:null,hasExpirationFromAdminSettings:null};c.canDisplayToilExpirationField=!1,c.calculateBalanceChange=u,c.canCalculateChange=m,c.canSubmit=p,c.clearExpiryDate=v,c.initChildController=q,c.initTimesExtended=D,c.initWatchersExtended=P,c.onAbsenceTypeUpdateExtended=B,c.onDateChangeExtended=I,c.openToilInDaysAccrualOptionsEditor=x,c.resetUIInputsExtended=O,c.setDaysSelectionModeExtended=L,c.updateExpiryDate=N,function(){$(),k(),E(),!c.isMode("create")&&y()}()}n.controller("RequestModalDetailsToilController",a),a.$inject=["$log","$q","$rootScope","crmAngService","OptionGroup","AbsenceType","detailsController"]}),define("leave-absences/shared/services/leave-calendar.service",["common/lodash","common/moment","leave-absences/shared/modules/services"],function(e,t,n){"use strict";function a(n,a,o,s){function r(n){function r(){return o.all().then(function(e){return e.list})}function i(){return o.leaveManagees(void 0,{unassigned:!0})}function c(){var t=e.get(n,"filters.userSettings.assignedTo.type","all");return m().then(function(e){return n.lookupContacts=e,a.all([d(),"me"!==t?u():a.resolve(null)])}).then(function(e){var t=e[0];return n.contactIdsToReduceTo=e[1],t})}function u(){return l().then(function(a){var o=a.filter(function(e){var a=e.info.details;return t(a.period_start_date).isSameOrBefore(n.selectedPeriod.end_date)&&(t(a.period_end_date).isSameOrAfter(n.selectedPeriod.start_date)||!a.period_end_date)});return e.uniq(o.map(function(e){return e.contact_id}))})}function l(){return h?a.resolve(h):s.all()}function d(){return o.all(v(),null,"display_name").then(function(e){return e.list})}function m(){var t=e.get(n,"filters.userSettings.assignedTo.type","all");return(0,b[t])()}function f(){return m().then(function(e){n.lookupContacts=e}).then(d)}function p(){return o.leaveManagees(n.contactId)}function v(){var t={department:e.get(n,"filters.userSettings.department.value",null),level_type:e.get(n,"filters.userSettings.level_type.value",null),location:e.get(n,"filters.userSettings.location.value",null),region:e.get(n,"filters.userSettings.region.value",null)},a=!!n.filters.userSettings.contact,o=e.isArray(n.lookupContacts)&&n.lookupContacts.length,s="all"!==e.get(n,"filters.userSettings.assignedTo.type","all");return a?t.id={IN:[n.filters.userSettings.contact.id]}:(s||o)&&(t.id={IN:e.map(n.lookupContacts,"id")}),t}var h,b={all:r,me:p,unassigned:i};return{loadContactsForAdmin:c,loadFilteredContacts:d,loadLookUpContacts:m,loadLookUpAndFilteredContacts:f}}return n.debug("LeaveCalendarService"),{init:r}}n.factory("LeaveCalendarService",a),a.$inject=["$log","$q","Contact","Contract"]}),define("leave-absences/shared/apis/entitlement-log.api",["leave-absences/shared/modules/apis","common/services/api"],function(e){"use strict";e.factory("EntitlementLogAPI",["$log","api",function(e,t){return e.debug("EntitlementLogAPI"),t.extend({all:function(t){return e.debug("EntitlementLogAPI.all"),this.sendGET("LeavePeriodEntitlementLog","get",t,!1).then(function(e){return e.values})}})}])}),define("leave-absences/shared/instances/entitlement.instance",["leave-absences/shared/modules/models-instances","common/models/instances/instance"],function(e){"use strict";e.factory("EntitlementInstance",["$log","ModelInstance","EntitlementAPI",function(e,t,n){return e.debug("EntitlementInstance"),t.extend({defaultCustomData:function(){return{remainder:{current:0,future:0},breakdown:[]}},getBreakdown:function(){return n.breakdown({entitlement_id:this.id}).then(function(e){this.breakdown=e}.bind(this))}})}])}),define("leave-absences/shared/models/entitlement.model",["common/lodash","leave-absences/shared/modules/models","common/models/model","leave-absences/shared/apis/entitlement.api","leave-absences/shared/apis/entitlement-log.api","leave-absences/shared/instances/entitlement.instance"],function(e,t){"use strict";t.factory("Entitlement",["$log","Model","EntitlementAPI","EntitlementInstance","EntitlementLogAPI",function(t,n,a,o,s){return t.debug("Entitlement"),n.extend({all:function(e,t){return a.all(this.processFilters(e),t).then(function(e){return e.map(function(e){return o.init(e,!0)})})},breakdown:function(t,n){return a.breakdown(t).then(function(t){return n?(n.map(function(n){var a=e.find(t,function(e){return e.id===n.id});return a&&(n.breakdown=a.breakdown),n}),n):t.map(function(e){return o.init(e,!0)})})},logs:function(t){return t=e.cloneDeep(t||{}),t.contact_id&&(t["entitlement_id.contact_id"]=t.contact_id,delete t.contact_id),t.period_id&&(t["entitlement_id.period_id"]=t.period_id,delete t.period_id),t.return=t.return||[],t.return.push("entitlement_id","entitlement_id.type_id","editor_id","entitlement_amount","comment","created_date"),s.all(t)}})}])}),define("leave-absences/shared/apis/leave-request.api",["leave-absences/shared/modules/apis","common/lodash","common/services/api"],function(e,t){"use strict";e.factory("LeaveRequestAPI",["$log","api","$q","shared-settings",function(e,n,a){return e.debug("LeaveRequestAPI"),n.extend({all:function(t,n,o,s,r){e.debug("LeaveRequestAPI.all");var i=a.defer();return t&&t.contact_id&&t.contact_id.IN&&0===t.contact_id.IN.length?i.resolve({list:[],total:0,allIds:[]}):i.resolve(this.getAll("LeaveRequest",t,n,o,s,"getFull",r)),i.promise},balanceChangeByAbsenceType:function(n){e.debug("LeaveRequestAPI.balanceChangeByAbsenceType");var o=a.defer();return n.contact_id&&n.period_id||o.reject("contact_id and period_id are mandatory"),n=t.defaults(n,{statuses:null,public_holiday:!1}),this.sendGET("LeaveRequest","getbalancechangebyabsencetype",n,!1).then(function(e){o.resolve(e.values)}),o.promise},calculateBalanceChange:function(n){return e.debug("LeaveRequestAPI.calculateBalanceChange",n),this.sendPOST("LeaveRequest","calculatebalancechange",n).then(function(e){return e.values.breakdown=t.values(e.values.breakdown),e.values})},getBalanceChangeBreakdown:function(e){return this.sendGET("LeaveRequest","getBreakdown",{leave_request_id:e},!1)},getWorkDayForDate:function(e,t){return this.sendGET("LeaveRequest","getWorkDayForDate",{leave_date:e,contact_id:t.toString()},!1)},create:function(t){return e.debug("LeaveRequestAPI.create",t),this.sendPOST("LeaveRequest","create",t).then(function(e){return e.values[0]})},delete:function(e){return this.sendPOST("LeaveRequest","delete",{id:e})},deleteAttachment:function(e,n,a){return a=t.assign({},a,{leave_request_id:e,attachment_id:n}),this.sendPOST("LeaveRequest","deleteattachment",a).then(function(e){return e.values})},deleteComment:function(e,n){return n=t.assign({},n,{comment_id:e}),this.sendPOST("LeaveRequest","deletecomment",n).then(function(e){return e.values})},find:function(t){return e.debug("LeaveRequestAPI.find"),this.sendGET("LeaveRequest","getFull",{id:t},!1).then(function(e){return 0===e.values.length?a.reject("LeaveRequest not found with this ID"):e.values[0]})},getAttachments:function(e,n){return n=t.assign({},n,{leave_request_id:e}),this.sendGET("LeaveRequest","getattachments",n,!1).then(function(e){return e.values})},getComments:function(e,n){return n=t.assign({},n,{leave_request_id:e}),this.sendGET("LeaveRequest","getcomment",n,!1).then(function(e){return e.values})},isManagedBy:function(t,n){return e.debug("LeaveRequestAPI.isManagedBy"),this.sendPOST("LeaveRequest","isManagedBy",{leave_request_id:t,contact_id:n}).then(function(e){return e.values})},isValid:function(n){e.debug("LeaveRequestAPI.isValid",n);var o=a.defer();return this.sendPOST("LeaveRequest","isValid",n).then(function(e){e.count>0?o.reject(t(e.values).map().flatten().value()):o.resolve(e.values)}),o.promise},saveComment:function(e,n,a){return a=t.assign({},a,{leave_request_id:e,text:n.text,contact_id:n.contact_id}),this.sendPOST("LeaveRequest","addcomment",a).then(function(e){return e.values})},update:function(t){return e.debug("LeaveRequestAPI.update",t),t.id?this.sendPOST("LeaveRequest","create",t).then(function(e){return e.values[0]}):a.reject("id is mandatory field")}})}])}),define("leave-absences/shared/instances/leave-request.instance",["common/lodash","common/moment","leave-absences/shared/modules/models-instances","common/models/option-group","common/models/instances/instance","leave-absences/shared/models/absence-type.model"],function(e,t,n){"use strict";n.factory("LeaveRequestInstance",["$q","checkPermissions","OptionGroup","shared-settings","ModelInstance","LeaveRequestAPI","AbsenceType",function(n,a,o,s,r,i,c){function u(e){return p(e).then(function(e){var t=this.status_id;return this.status_id=e.value,this.update().catch(function(e){return this.status_id=t,n.reject(e)}.bind(this))}.bind(this))}function l(){return c.all({id:this.type_id}).then(c.loadCalculationUnits).then(function(e){return n.all({calculatedBalanceChange:this.calculateBalanceChange(e[0].calculation_unit_name),currentBalanceChange:this.getBalanceChangeBreakdown()})}.bind(this)).then(function(e){return+e.currentBalanceChange.amount!=+e.calculatedBalanceChange.amount})}function d(e){return p(e).then(function(e){return this.status_id===e.value}.bind(this))}function m(){var t=[];return e.forEach(this.files,function(e){e.toBeDeleted&&t.push(i.deleteAttachment(this.id,e.attachment_id))}.bind(this)),n.all(t)}function f(e){return t.duration(e.time_to).subtract(t.duration(e.time_from)).asHours()}function p(t){return o.valuesOf("hrleaveandabsences_leave_request_status").then(function(n){return e.find(n,function(e){return e.name===t})})}function v(t){var a=e.cloneDeep(t),o=a.breakdown.length>1,s=e.first(e.values(a.breakdown)),r=e.last(e.values(a.breakdown));return n.all([this.getWorkDayForDate(s.date),o&&this.getWorkDayForDate(r.date)]).then(function(t){return s.amount=t[0].time_from?Math.min(this.from_date_amount,f(t[0])):0,o&&(r.amount=t[1].time_from?Math.min(this.to_date_amount,f(t[1])):0),a.amount=-1*e.reduce(a.breakdown,function(e,t){return e+t.amount},0),a}.bind(this))}function h(){var e=this.id,t=[];return t.push(n.sequence(this.comments.filter(function(e){return!e.comment_id}).map(function(t){return function(){return i.saveComment(e,t)}}))),t=t.concat(this.comments.filter(function(e){return e.comment_id&&e.toBeDeleted}).map(function(e){return i.deleteComment(e.comment_id)})),n.all(t)}return r.extend({defaultCustomData:function(){return{comments:[],files:[],request_type:"leave"}},calculateBalanceChange:function(t){var n=["contact_id","from_date","to_date","type_id","from_date_type","to_date_type"];return"hours"===t&&e.pull(n,"from_date_type","to_date_type"),i.calculateBalanceChange(e.pick(this,n)).then(function(e){return"hours"===t?v.call(this,e):e}.bind(this))},cancel:function(){return u.call(this,s.statusNames.cancelled)},approve:function(){return u.call(this,s.statusNames.approved)},checkIfBalanceChangeNeedsRecalculation:function(){return l.call(this)},reject:function(){return u.call(this,s.statusNames.rejected)},sendBack:function(){return u.call(this,s.statusNames.moreInformationRequired)},update:function(){return i.update(this.toAPI()).then(function(){return n.all([h.call(this),m.call(this)])}.bind(this))},create:function(){return i.create(this.toAPI()).then(function(e){return this.id=e.id,n.all([h.call(this)])}.bind(this))},deleteAttachment:function(e){e.toBeDeleted||(e.toBeDeleted=!0)},deleteComment:function(t){if(t.comment_id)return void(t.toBeDeleted=!0);this.comments=e.reject(this.comments,function(e){return t.created_at===e.created_at&&t.text===e.text})},delete:function(){return i.delete(this.id)},getBalanceChangeBreakdown:function(){return i.getBalanceChangeBreakdown(this.id).then(function(t){return{amount:e.reduce(t.values,function(e,t){return e+parseFloat(t.amount)},0),breakdown:t.values.map(function(e){return{amount:Math.abs(parseFloat(e.amount)),date:e.date,type:{id:e.id,value:e.type,label:e.label}}})}})},getWorkDayForDate:function(e){return i.getWorkDayForDate(e,this.contact_id).then(function(e){return e.values}).catch(function(e){return n.reject(e)})},isValid:function(){return i.isValid(this.toAPI())},isApproved:function(){return d.call(this,s.statusNames.approved)},isAwaitingApproval:function(){return d.call(this,s.statusNames.awaitingApproval)},isCancelled:function(){return d.call(this,s.statusNames.cancelled)},isRejected:function(){return d.call(this,s.statusNames.rejected)},isSentBack:function(){return d.call(this,s.statusNames.moreInformationRequired)},loadComments:function(){return this.id?i.getComments(this.id).then(function(e){this.comments=e}.bind(this)):n.resolve()},roleOf:function(e){return this.contact_id===e?n.resolve("owner"):a(s.permissions.admin.administer).then(function(t){return t?"admin":i.isManagedBy(this.id,e).then(function(e){return e?"manager":"none"})}.bind(this))},toAPIFilter:function(t,n,a){e.includes(["balance_change","dates","comments","files"],a)||(t[a]=this[a])},loadAttachments:function(){return this.id?i.getAttachments(this.id).then(function(e){this.files=e}.bind(this)):n.resolve()}})}])}),define("leave-absences/shared/models/leave-request.model",["leave-absences/shared/modules/models","common/models/model","leave-absences/shared/apis/leave-request.api","leave-absences/shared/instances/leave-request.instance"],function(e){"use strict";e.factory("LeaveRequest",["$log","Model","LeaveRequestAPI","LeaveRequestInstance",function(e,t,n,a){return e.debug("LeaveRequest"),t.extend({all:function(e,t,o,s,r){return n.all(this.processFilters(e),t,o,s,r).then(function(e){return e.list=e.list.map(function(e){return a.init(e,!0)}),e})},balanceChangeByAbsenceType:function(e){return n.balanceChangeByAbsenceType(this.processFilters(e))},find:function(e){return n.find(e).then(function(e){return a.init(e,!0)})}})}])}),define("leave-absences/shared/apis/public-holiday.api",["leave-absences/shared/modules/apis","common/services/api"],function(e){"use strict";e.factory("PublicHolidayAPI",["$log","api",function(e,t){return e.debug("PublicHolidayAPI"),t.extend({all:function(t){return e.debug("PublicHolidayAPI"),this.sendGET("PublicHoliday","get",t).then(function(e){return e.values})}})}])}),define("leave-absences/shared/instances/public-holiday.instance",["leave-absences/shared/modules/models-instances","common/models/instances/instance"],function(e){"use strict";e.factory("PublicHolidayInstance",["$log","ModelInstance",function(e,t){return e.debug("PublicHolidayInstance"),t.extend({})}])}),define("leave-absences/shared/models/public-holiday.model",["common/moment","leave-absences/shared/modules/models","common/models/model","common/services/hr-settings","leave-absences/shared/apis/public-holiday.api","leave-absences/shared/instances/public-holiday.instance"],function(e,t){"use strict";t.factory("PublicHoliday",["$log","Model","PublicHolidayAPI","PublicHolidayInstance","shared-settings",function(t,n,a,o,s){return t.debug("PublicHoliday"),n.extend({all:function(e){return t.debug("PublicHoliday.all",e),a.all(e).then(function(e){return e.map(function(e){return o.init(e,!0)})})},isPublicHoliday:function(n){t.debug("PublicHoliday.isPublicHoliday",n);var o=e(n).format(s.serverDateFormat),r={date:o};return a.all(r).then(function(e){return!!e.length})}})}])}),define("leave-absences/shared/instances/sickness-request.instance",["common/lodash","leave-absences/shared/modules/models-instances","leave-absences/shared/instances/leave-request.instance"],function(e,t){"use strict";t.factory("SicknessRequestInstance",["LeaveRequestAPI","LeaveRequestInstance",function(t,n){return n.extend({defaultCustomData:function(){var t={sickness_reason:null,sickness_required_documents:"",request_type:"sickness"};return e.assign({},n.defaultCustomData(),t)},getDocumentArray:function(){return this.sickness_required_documents?this.sickness_required_documents.split(","):[]},toggleDocument:function(t){var n=this.getDocumentArray(),a=n.indexOf(t);e.includes(n,t)?n.splice(a,1):n.push(t),this.sickness_required_documents=n.join(",")},toAPIFilter:function(t,n,a){e.includes(["balance_change","dates","comments","files"],a)||(t[a]=this[a])}})}])}),define("leave-absences/shared/instances/toil-request.instance",["common/lodash","leave-absences/shared/modules/models-instances","leave-absences/shared/instances/leave-request.instance"],function(e,t){"use strict";t.factory("TOILRequestInstance",["LeaveRequestAPI","LeaveRequestInstance",function(t,n){return n.extend({defaultCustomData:function(){var t={from_date_amount:0,to_date_amount:0,request_type:"toil"};return e.assign({},n.defaultCustomData(),t)},toAPIFilter:function(t,n,a){e.includes(["balance_change","dates","comments","files"],a)||(t[a]=this[a])}})}])}),define("leave-absences/shared/controllers/request.controller",["common/angular","leave-absences/shared/modules/controllers","common/lodash","common/moment","common/models/contact","common/services/api/option-group","common/services/hr-settings","common/services/pub-sub","leave-absences/shared/models/absence-period.model","leave-absences/shared/models/absence-type.model","leave-absences/shared/models/entitlement.model","leave-absences/shared/models/leave-request.model","leave-absences/shared/models/public-holiday.model","leave-absences/shared/instances/leave-request.instance","leave-absences/shared/instances/sickness-request.instance","leave-absences/shared/instances/toil-request.instance","leave-absences/shared/services/leave-request.service"],function(e,t,n,a){"use strict";function o(t,o,s,r,i,c,u,l,d,m,f,p,v,h,b,g,y,_,q,C){function T(e){"days"===Ne.selectedAbsenceType.calculation_unit_name?delete Ne.request[e+"_date_amount"]:delete Ne.request[e+"_date_type"]}function A(){["from","to"].forEach(T)}function D(){return Me.checkIfSelfLeaveApprover().then(function(e){e&&(Ee="admin")})}function R(){var e=Ne.requestStatuses[y.statusNames.awaitingApproval].value;ke.status_id===e&&e!==Ne.request.status_id&&d.publish("ManagerBadge:: Update Count")}function P(){return Fe.filter(function(e){return e.isRequired}).every(function(e){return e.canSubmit&&e.canSubmit()})}function S(){return Fe.filter(function(e){return!e.isRequired}).some(function(e){return e.canSubmit&&e.canSubmit()})}function I(){return!Ne.loading.entitlements&&(!!le("admin")||!ce("view")&&!(le("manager")&&!ce("create")))}function L(){var e=P();return Ne.isMode("edit")&&(e=e&&(G()||S())),Ne.canManage&&Ne.requestStatuses&&(e=e&&!!Ne.getStatusFromValue(Ne.newStatusOnSave)),(e=e&&!!Ne.period.id)&&!Ne.isMode("view")}function O(){Ne.isSelfRecord&&!Ne.isSelfLeaveApprover?Ne.request.status_id=Ne.requestStatuses[y.statusNames.awaitingApproval].value:Ne.canManage&&(Ne.request.status_id=Ne.newStatusOnSave||Ne.request.status_id)}function M(){if(Ne.isMode("edit")&&!Ne.isRole("staff")&&"toil"!==j())return Ne.request.calculateBalanceChange(Ne.selectedAbsenceType.calculation_unit_name).then(function(e){if(+Ne.balance.change.amount!=+e.amount)return C.promptBalanceChangeRecalculation().then(function(){s.$emit("LeaveRequestPopup::recalculateBalanceChange")}),o.reject()})}function w(){return"toil"!==j()&&!Ne.request.change_balance}function $(){Ne.errors=[]}function k(){return Ne.request.create().then(Pe).then(function(){ge("LeaveRequest::new")})}function B(){se()&&!Ne.isRole("staff")&&(Ne.request.change_balance=!0)}function x(){l.open({title:"Confirm Deletion?",copyCancel:"Cancel",copyConfirm:"Confirm",classConfirm:"btn-danger",msg:"This cannot be undone",onConfirm:function(){return Ne.request.delete().then(function(){Ne.dismissModal(),d.publish("LeaveRequest::delete",Ne.request)})}})}function E(){i.dismiss({$value:"cancel"})}function F(){var e=j();return"leave"===e?{is_sick:!1}:"sickness"===e?{is_sick:!0}:"toil"===e?{allow_accruals_request:!0}:void 0}function N(){return U(Ne.getStatusFromValue(Ne.request.status_id).name)}function U(e){return n.map(we[e],function(e){return Ne.requestStatuses[e]})}function j(){return Ne.request?Ne.request.request_type:Ne.leaveType||null}function H(){return!Ne.request||e.equals({},Ne.requestStatuses)?[]:Ne.request.status_id?N():U("none")}function W(e){return n.find(Ne.requestStatuses,function(t){return t.value===e})}function Y(e){Ne.errors=n.isArray(e)?e:[e],Ne.loading.absenceTypes=!1,Ne.submitting=!1}function G(){return!e.equals(ke,Ne.request.attributes())||Ne.canManage&&Ne.newStatusOnSave}function V(){return Ne.postContactSelection=!0,Ne.staffMemberSelectionComplete=!1,Ne.request.contact_id?o.resolve().then(me).then(fe).then(_e).then(Ce).then(oe).then(Q).then(Ne.isMode("edit")?Te:n.noop).then(function(){Ne.postContactSelection=!1,Ne.staffMemberSelectionComplete=!0}).catch(function(e){if(e!==xe)return o.reject(e)}):o.reject("The contact id was not set")}function z(){var e=[y.statusNames.moreInformationRequired,y.statusNames.approved,y.statusNames.rejected,y.statusNames.cancelled];we.none=[y.statusNames.moreInformationRequired,y.statusNames.approved],we.awaiting_approval=e,we.more_information_required=e,we.rejected=e,we.approved=e,we.cancelled=[y.statusNames.awaitingApproval].concat(e)}function X(){Ne.canManage=Ne.isRole("manager")||Ne.isRole("admin")}function Q(){return Ne.canManage?f.find(Ne.request.contact_id).then(function(e){Ne.contactName=e.display_name}):o.resolve()}function J(){Ne.isRole("admin")&&Ne.isSelfRecord&&(Ne.isSelfLeaveApprover=!0)}function K(){var e="my-leave"===s.section,t=+Me.id==+n.get(Ne,"leaveRequest.contact_id"),a=!n.get(Ne,"leaveRequest.id");Ne.isSelfRecord=e&&a||t}function Z(){Be.push(s.$on("LeaveRequestPopup::requestObjectUpdated",Te),s.$on("LeaveRequestPopup::absencePeriodChanged",function(){fe().then(_e).then(function(){s.$emit("LeaveRequestPopup::absencePeriodBalancesUpdated",Ne.absenceTypes)})}),s.$on("LeaveRequestPopup::handleError",function(e,t){Y(t)}),s.$on("LeaveRequestPopup::childComponent::register",function(){$e++})),r.$on("$destroy",Se),r.$on("LeaveRequestPopup::addTab",function(e,t){Fe.push(t)})}function ee(){var e,t;Ne.request=Ne.leaveRequest||null,e=j(),t=Ne.initRequestAttributes(),"leave"===e?Ne.request=g.init(t):"sickness"===e?Ne.request=_.init(t):"toil"===e&&(Ne.request=q.init(t))}function te(){var e={};return Ne.request?e=Ne.request.attributes():Ne.canManage||(e={contact_id:Me.id}),e}function ne(){return Ee="staff",ae().then(Ne.isSelfRecord&&!Ne.isRole("admin")&&D)}function ae(){return c(y.permissions.admin.administer).then(function(e){e&&(Ee="admin")}).then(function(){return"admin"!==Ee&&c(y.permissions.ssp.manage)}).then(function(e){e&&(Ee="manager")})}function oe(){Ne.defaultStatus?Ne.newStatusOnSave=Ne.requestStatuses[y.statusNames[Ne.defaultStatus]].value:(Ne.isRole("admin")||Ne.isMode("create")&&Ne.isRole("manager"))&&(Ne.newStatusOnSave=Ne.requestStatuses[y.statusNames.approved].value)}function se(){return!Ne.request.status_id||!n.includes(["cancelled","rejected"],W(Ne.request.status_id).name)}function re(e){var t=Ne.getStatusFromValue(Ne.request.status_id);return!!t&&t.name===e}function ie(e){return Ne.request&&Ne.request.request_type===e}function ce(e){return Ne.mode===e}function ue(e,t){var n=a(e.from_date),o=a(e.to_date);return n.isSameOrAfter(t.start_date,"day")&&o.isSameOrBefore(t.end_date,"day")}function le(e){return Ee===e}function de(){return p.all().then(function(e){Ne.absencePeriods=e})}function me(){return v.all(F()).then(v.loadCalculationUnits).then(function(e){Oe={types:e,ids:e.map(function(e){return e.id})}})}function fe(){return Ne.loading.entitlements=!0,h.all({contact_id:Ne.request.contact_id,period_id:Ne.period.id,type_id:{IN:Oe.ids}},!0).finally(function(){Ne.loading.entitlements=!1})}function pe(){return f.getLoggedIn().then(function(e){Me=e})}function ve(){return Ne.selectedContactId?f.find(Ne.selectedContactId).then(function(e){Ne.managedContacts=[e]}):Ne.isRole("admin")?f.all().then(function(e){Ne.managedContacts=e.list}):Me.leaveManagees().then(function(e){Ne.managedContacts=e})}function he(){return u.valuesOf("hrleaveandabsences_leave_request_status").then(function(e){Ne.requestStatuses=n.keyBy(e,"name")})}function be(e,t){var a;return n.compact(e.map(function(e){if(a=n.find(t,{type_id:e.id}))return{id:a.type_id,title:e.title+" ( "+a.remainder.current+" ) ",remainder:a.remainder.current,allow_overuse:e.allow_overuse,calculation_unit_name:e.calculation_unit_name}}))}function ge(e){R(),d.publish(e,Ne.request),Ne.errors=[],Ne.dismissModal()}function ye(){["from","to"].forEach(function(e){Ne.request[e+"_date"]=ke[e+"_date"]})}function _e(e){if(Ne.absenceTypes=be(Oe.types,e),!Ne.absenceTypes.length)return o.reject(xe)}function qe(){Ne.period=n.find(Ne.absencePeriods,function(e){return Ne.isMode("create")?e.current:ue(Ne.request,e)})}function Ce(){Ne.isMode("create")?(Ne.selectedAbsenceType=Ne.absenceTypes[0],Ne.request.type_id=Ne.selectedAbsenceType.id):Ne.selectedAbsenceType=n.find(Ne.absenceTypes,function(e){return e.id===Ne.request.type_id})}function Te(){ke=e.copy(Ne.request.attributes())}function Ae(){var e;Ne.request.id?(e=[Ne.requestStatuses[y.statusNames.approved].value,Ne.requestStatuses[y.statusNames.adminApproved].value,Ne.requestStatuses[y.statusNames.rejected].value,Ne.requestStatuses[y.statusNames.cancelled].value],Ne.mode="edit",Ne.isRole("staff")&&e.indexOf(Ne.request.status_id)>-1&&(Ne.mode="view")):Ne.mode="create"}function De(){var e=Ne.request.status_id;if(!Ne.isMode("view")&&!Ne.submitting)return Ne.submitting=!0,O(),A(),Ne.request.isValid().then(se()&&M).then(B).then(w()&&ye).then(Re).then(function(){return Ne.isMode("edit")?Le():k()}).catch(function(t){Ne.request.status_id=e,t&&Y(t)
}).finally(function(){Ne.submitting=!1})}function Re(){return o.all(Fe.map(function(e){return e.onBeforeSubmit&&e.onBeforeSubmit()}))}function Pe(){function e(e){e&&n.push(e),++a===$e&&(n.length>0?t.reject(n):t.resolve())}var t=o.defer(),n=[],a=0;return $e>0?s.$broadcast("LeaveRequestPopup::submit",e):t.resolve(),t.promise}function Se(){Be.forEach(function(e){e()})}function Ie(){s.$broadcast("LeaveRequestPopup::absenceTypeChanged")}function Le(){return Ne.request.update().then(Pe).then(function(){Ne.isRole("manager")?ge("LeaveRequest::updatedByManager"):(Ne.isRole("staff")||Ne.isRole("admin"))&&ge("LeaveRequest::edit")})}t.debug("RequestCtrl");var Oe,Me,we={},$e=0,ke={},Be=[],xe="No entitlement",Ee="",Fe=[],Ne=n.assign(this,m);Ne.absencePeriods=[],Ne.absenceTypes=[],Ne.canManage=!1,Ne.contactName=null,Ne.errors=[],Ne.isSelfLeaveApprover=!1,Ne.loading={absenceTypes:!0,entitlements:!0},Ne.managedContacts=[],Ne.mode="",Ne.newStatusOnSave=null,Ne.period={},Ne.postContactSelection=!1,Ne.requestStatuses={},Ne.selectedAbsenceType={},Ne.staffMemberSelectionComplete=!1,Ne.submitting=!1,Ne.balance={closing:0,opening:0,change:{amount:0,breakdown:[]}},Ne.canChangeAbsenceType=I,Ne.canSubmit=L,Ne.closeAlert=$,Ne.deleteLeaveRequest=x,Ne.dismissModal=E,Ne.getStatuses=H,Ne.getStatusFromValue=W,Ne.initAfterContactSelection=V,Ne.initRequestAttributes=te,Ne.isLeaveStatus=re,Ne.isLeaveType=ie,Ne.isMode=ce,Ne.isRole=le,Ne.submit=De,Ne.updateAbsenceType=Ie,function(){Ne.loading.absenceTypes=!0,z(),Z(),pe().then(K).then(function(){return o.all([ne(),de(),he()])}).then(X).then(J).then(ee).then(Ae).then(qe).then(function(){return Ne.canManage&&!Ne.isMode("edit")&&ve()}).then(function(){if(Ne.selectedContactId&&(Ne.request.contact_id=Ne.selectedContactId),Ne.request.contact_id)return Ne.initAfterContactSelection()}).catch(Y).finally(function(){Ne.loading.absenceTypes=!1})}()}t.controller("RequestCtrl",o),o.$inject=["$log","$q","$rootScope","$scope","$uibModalInstance","checkPermissions","api.optionGroup","dialog","pubSub","directiveOptions","Contact","AbsencePeriod","AbsenceType","Entitlement","LeaveRequest","LeaveRequestInstance","shared-settings","SicknessRequestInstance","TOILRequestInstance","LeaveRequestService"]}),define("leave-absences/shared/services/leave-popup.service",["common/lodash","common/modules/angular-date","leave-absences/shared/modules/services","common/services/angular-date/date-format","common/services/notification.service","leave-absences/shared/controllers/request.controller"],function(e,t){"use strict";function n(e,t,n,a,o,s,r,i,c){function u(e){return i.get().then(function(t){return e.roleOf(t.contactId)}).then(function(e){return"none"!==e})}function l(e){a.open({appendTo:t.children().eq(0),templateUrl:s.sharedPathTpl+"components/leave-request-popup/leave-request-popup.html",controller:"RequestCtrl",controllerAs:"$ctrl",windowClass:"chr_leave-request-modal",resolve:{directiveOptions:function(){return e},format:["DateFormat",function(e){return e.getDateFormat()}]}})}function d(e){return c.find(e).then(function(e){return u(e).then(function(t){t?l({leaveRequest:e,leaveType:e.request_type,selectedContactId:e.contact_id}):o.error("Error","You dont have permission to see this leave request")})}).catch(function(e){o.error("Error",e)})}return e.debug("LeavePopup"),{openModal:l,openModalByID:d}}t.factory("LeavePopup",n),n.$inject=["$log","$rootElement","$rootScope","$uibModal","notificationService","shared-settings","DateFormat","Session","LeaveRequest"]}),define("leave-absences/manager-leave/modules/components",["common/angular"],function(e){return e.module("manager-leave.components",[])}),define("leave-absences/manager-leave/components/manager-leave-container",["leave-absences/manager-leave/modules/components"],function(e){e.component("managerLeaveContainer",{bindings:{contactId:"<"},templateUrl:["settings",function(e){return e.pathTpl+"components/manager-leave-container.html"}],controller:["$log","$rootScope","$state",function(e,t,n){function a(){n.go(o.tabName)}e.debug("Component: manager-leave-container"),t.section="manager-leave";var o=this;o.tabName=n.current.name,o.changeTab=a}],controllerAs:"managerLeave"})}),function(e){define("leave-absences/manager-leave/modules/settings",["common/angular"],function(t){return t.module("manager-leave.settings",[]).constant("settings",{debug:e.debug,pathTpl:e.vars.leaveAndAbsences.baseURL+"/views/manager-leave/"})})}(CRM),function(e,t){define("leave-absences/manager-leave/modules/config",["common/angular","common/lodash","leave-absences/manager-leave/modules/settings"],function(t,n){function a(t){t.withAutoBase(!0),t.settings.ga={userId:n.get(e,"vars.session.contact_id")}}return t.module("manager-leave.config",["manager-leave.settings"]).config(["$stateProvider","$resourceProvider","$urlRouterProvider","$httpProvider","$logProvider","$analyticsProvider","settings",function(t,n,o,s,r,i,c){s.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",n.defaults.stripTrailingSlashes=!1,o.otherwise("/manager-leave/requests"),a(i),r.debugEnabled(c.debug),t.state("manager-leave",{abstract:!0,url:"/manager-leave",template:'<manager-leave-container contact-id="$resolve.contactId"></manager-leave-container>',resolve:{contactId:function(){return e.vars.leaveAndAbsences.contactId},format:["DateFormat",function(e){return e.getDateFormat()}]}}).state("manager-leave.requests",{url:"/requests?leave-request-id",template:'<manage-leave-requests contact-id="managerLeave.contactId"></manage-leave-requests>',onEnter:["$stateParams","LeavePopup",function(e,t){e["leave-request-id"]&&t.openModalByID(e["leave-request-id"])}]}).state("manager-leave.calendar",{url:"/calendar",template:'<leave-calendar contact-id="managerLeave.contactId"></leave-calendar>'}).state("manager-leave.leave-balances",{url:"/leave-balances",template:"<leave-balance-tab></leave-balance-tab>"})}])})}(CRM,Drupal),define("leave-absences/manager-leave/app",["common/angular","common/angularBootstrap","common/angulartics","common/angulartics-google-tag-manager","common/angularUiRouter","common/text-angular","common/directives/loading","common/directives/scroll-shadows.directive","common/directives/time-amount-picker.directive","common/directives/timepicker-select.directive","common/filters/angular-date/format-date","common/filters/time-unit-applier.filter","common/modules/dialog","common/services/angular-date/date-format","common/services/check-permissions","common/services/crm-ang.service","leave-absences/shared/models/absence-period.model","leave-absences/shared/models/absence-type.model","leave-absences/shared/components/leave-balance-tab.component","leave-absences/shared/components/leave-calendar.component","leave-absences/shared/components/leave-calendar-day.component","leave-absences/shared/components/leave-calendar-legend.component","leave-absences/shared/components/leave-calendar-month.component","leave-absences/shared/components/leave-request-actions.component","leave-absences/shared/components/leave-request-popup-comments-tab.component","leave-absences/shared/components/leave-request-popup-details-tab.component","leave-absences/shared/components/leave-request-popup-files-tab","leave-absences/shared/components/leave-request-record-actions.component","leave-absences/shared/components/manage-leave-requests.component","leave-absences/shared/controllers/sub-controllers/request-modal-details-leave.controller","leave-absences/shared/controllers/sub-controllers/request-modal-details-sickness.controller","leave-absences/shared/controllers/sub-controllers/request-modal-details-toil.controller","leave-absences/shared/models/absence-period.model","leave-absences/shared/models/absence-type.model","leave-absences/shared/services/leave-calendar.service","leave-absences/shared/services/leave-popup.service","leave-absences/manager-leave/components/manager-leave-container","leave-absences/manager-leave/modules/config"],function(e){return e.module("manager-leave",["ngResource","ngAnimate","angulartics","angulartics.google.tagmanager","ui.bootstrap","ui.router","ui.select","textAngular","common.angularDate","common.dialog","common.filters","common.models","common.directives","common.mocks","leave-absences.models","leave-absences.components","leave-absences.controllers","leave-absences.models","leave-absences.services","manager-leave.config","manager-leave.components"]).run(["$log","$rootScope","shared-settings","settings",function(e,t,n,a){e.debug("app.run"),t.sharedPathTpl=n.sharedPathTpl,t.settings=a}]),e}),function(e,t){var n=e.vars.leaveAndAbsences.baseURL+"/js/src/leave-absences";t.config({urlArgs:"bust="+(new Date).getTime(),paths:{"leave-absences/shared":n+"/shared","leave-absences/manager-leave":n+"/manager-leave"}}),t(["leave-absences/shared/config"],function(){t(["leave-absences/manager-leave/app","leave-absences/shared/models/leave-request.model"],function(e){e.bootstrap(document.querySelector("[data-leave-absences-manager-leave]"),["manager-leave"])})})}(CRM,require),define("manager-leave",function(){});
//# sourceMappingURL=/sites/all/modules/civicrm/tools/extensions/civihr/uk.co.compucorp.civicrm.hrleaveandabsences/js/dist/manager-leave.js.map