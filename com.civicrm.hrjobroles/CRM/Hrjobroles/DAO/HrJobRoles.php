<?php
/*
+--------------------------------------------------------------------+
| CiviCRM version 4.7                                                |
+--------------------------------------------------------------------+
| Copyright CiviCRM LLC (c) 2004-2016                                |
+--------------------------------------------------------------------+
| This file is a part of CiviCRM.                                    |
|                                                                    |
| CiviCRM is free software; you can copy, modify, and distribute it  |
| under the terms of the GNU Affero General Public License           |
| Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
|                                                                    |
| CiviCRM is distributed in the hope that it will be useful, but     |
| WITHOUT ANY WARRANTY; without even the implied warranty of         |
| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
| See the GNU Affero General Public License for more details.        |
|                                                                    |
| You should have received a copy of the GNU Affero General Public   |
| License and the CiviCRM Licensing Exception along                  |
| with this program; if not, contact CiviCRM LLC                     |
| at info[AT]civicrm[DOT]org. If you have questions about the        |
| GNU Affero General Public License or the licensing of CiviCRM,     |
| see the CiviCRM license FAQ at http://civicrm.org/licensing        |
+--------------------------------------------------------------------+
*/
/**
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2016
 *
 * Generated from xml/schema/CRM/Hrjobroles/HrJobRoles.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 */
require_once 'CRM/Core/DAO.php';
require_once 'CRM/Utils/Type.php';
class CRM_Hrjobroles_DAO_HrJobRoles extends CRM_Core_DAO
{
  /**
   * static instance to hold the table name
   *
   * @var string
   */
  static $_tableName = 'civicrm_hrjobroles';
  /**
   * static instance to hold the field values
   *
   * @var array
   */
  static $_fields = null;
  /**
   * static instance to hold the keys used in $_fields for each field.
   *
   * @var array
   */
  static $_fieldKeys = null;
  /**
   * static instance to hold the FK relationships
   *
   * @var string
   */
  static $_links = null;
  /**
   * static instance to hold the values that can
   * be imported
   *
   * @var array
   */
  static $_import = null;
  /**
   * static instance to hold the values that can
   * be exported
   *
   * @var array
   */
  static $_export = null;
  /**
   * static value to see if we should log any modifications to
   * this table in the civicrm_log table
   *
   * @var boolean
   */
  static $_log = true;
  /**
   * Unique HrJobRoles ID
   *
   * @var int unsigned
   */
  public $id;
  /**
   * FK to Contract
   *
   * @var int unsigned
   */
  public $job_contract_id;
  /**
   * Title or Project name for the Job Role.
   *
   * @var string
   */
  public $title;
  /**
   * Negotiated name for the role
   *
   * @var text
   */
  public $description;
  /**
   * Job Role Status (Active / Inactive)
   *
   * @var string
   */
  public $status;
  /**
   * Role region value.
   *
   * @var string
   */
  public $region;
  /**
   * Role department.
   *
   * @var string
   */
  public $department;
  /**
   * Junior manager, senior manager, etc.
   *
   * @var string
   */
  public $level_type;
  /**
   * FK to Contact ID
   *
   * @var int unsigned
   */
  public $manager_contact_id;
  /**
   *
   * @var string
   */
  public $organization;
  /**
   * List of Cost Center option group values
   *
   * @var string
   */
  public $cost_center;
  /**
   * Cost Center value type (fixed or %)
   *
   * @var string
   */
  public $cost_center_val_type;
  /**
   * Percentage of Pay Assigned to this cost center
   *
   * @var string
   */
  public $percent_pay_cost_center;
  /**
   * Amount of Pay Assigned to this cost center
   *
   * @var string
   */
  public $amount_pay_cost_center;
  /**
   * List of attached Funder contact IDs
   *
   * @var string
   */
  public $funder;
  /**
   * Funder value type (fixed or %)
   *
   * @var string
   */
  public $funder_val_type;
  /**
   * Percentage of Pay Assigned to this funder
   *
   * @var string
   */
  public $percent_pay_funder;
  /**
   * Amount of Pay Assigned to this funder
   *
   * @var string
   */
  public $amount_pay_funder;
  /**
   * Main work location
   *
   * @var string
   */
  public $location;
  /**
   * Start Date of the job role
   *
   * @var datetime
   */
  public $start_date;
  /**
   * End Date of the job role
   *
   * @var datetime
   */
  public $end_date;
  /**
   * class constructor
   *
   * @return civicrm_hrjobroles
   */
  function __construct()
  {
    $this->__table = 'civicrm_hrjobroles';
    parent::__construct();
  }
  /**
   * Returns foreign keys and entity references
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  static function getReferenceColumns()
  {
    if (!self::$_links) {
      self::$_links = static ::createReferenceColumns(__CLASS__);
      self::$_links[] = new CRM_Core_Reference_Basic(self::getTableName() , 'manager_contact_id', 'civicrm_contact', 'id');
    }
    return self::$_links;
  }
  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  static function &fields()
  {
    if (!(self::$_fields)) {
      self::$_fields = array(
        'id' => array(
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Job Role ID') ,
          'description' => 'Unique HrJobRoles ID',
          'required' => true,
          'import' => false,
          'where' => 'civicrm_hrjobroles.id',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => false,
        ) ,
        'job_contract_id' => array(
          'name' => 'job_contract_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Job ID') ,
          'description' => 'FK to Contract',
          'required' => true,
          'import' => true,
          'where' => 'civicrm_hrjobroles.job_contract_id',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
        ) ,
        'title' => array(
          'name' => 'title',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Title') ,
          'description' => 'Title or Project name for the Job Role.',
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'import' => true,
          'where' => 'civicrm_hrjobroles.title',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
          'default' => 'NULL',
        ) ,
        'description' => array(
          'name' => 'description',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => ts('Job Role Description') ,
          'description' => 'Negotiated name for the role',
          'import' => true,
          'where' => 'civicrm_hrjobroles.description',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
        ) ,
        'status' => array(
          'name' => 'status',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Status') ,
          'description' => 'Job Role Status (Active / Inactive)',
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'export' => true,
          'where' => 'civicrm_hrjobroles.status',
          'headerPattern' => '',
          'dataPattern' => '',
          'default' => 'NULL',
        ) ,
        'hrjc_region' => array(
          'name' => 'region',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Region') ,
          'description' => 'Role region value.',
          'maxlength' => 127,
          'size' => CRM_Utils_Type::HUGE,
          'import' => true,
          'where' => 'civicrm_hrjobroles.region',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
          'pseudoconstant' => array(
            'optionGroupName' => 'hrjc_region',
            'optionEditPath' => 'civicrm/admin/options/hrjc_region',
          )
        ) ,
        'hrjc_role_department' => array(
          'name' => 'department',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Department') ,
          'description' => 'Role department.',
          'maxlength' => 127,
          'size' => CRM_Utils_Type::HUGE,
          'import' => true,
          'where' => 'civicrm_hrjobroles.department',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
          'pseudoconstant' => array(
            'optionGroupName' => 'hrjc_department',
            'optionEditPath' => 'civicrm/admin/options/hrjc_department',
          )
        ) ,
        'hrjc_level_type' => array(
          'name' => 'level_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Level') ,
          'description' => 'Junior manager, senior manager, etc.',
          'maxlength' => 63,
          'size' => CRM_Utils_Type::BIG,
          'import' => true,
          'where' => 'civicrm_hrjobroles.level_type',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
          'pseudoconstant' => array(
            'optionGroupName' => 'hrjc_level_type',
            'optionEditPath' => 'civicrm/admin/options/hrjc_level_type',
          )
        ) ,
        'manager_contact_id' => array(
          'name' => 'manager_contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => ts('Manager Contact Id') ,
          'description' => 'FK to Contact ID',
          'FKClassName' => 'CRM_Contact_DAO_Contact',
        ) ,
        'organization' => array(
          'name' => 'organization',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Organization') ,
          'maxlength' => 127,
          'size' => CRM_Utils_Type::HUGE,
          'export' => true,
          'where' => 'civicrm_hrjobroles.organization',
          'headerPattern' => '',
          'dataPattern' => '',
        ) ,
        'hrjc_cost_center' => array(
          'name' => 'cost_center',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Cost Center') ,
          'description' => 'List of Cost Center option group values',
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'import' => true,
          'where' => 'civicrm_hrjobroles.cost_center',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
        ) ,
        'hrjc_cost_center_val_type' => array(
          'name' => 'cost_center_val_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Cost Center value type') ,
          'description' => 'Cost Center value type (fixed or %)',
          'maxlength' => 127,
          'size' => CRM_Utils_Type::HUGE,
          'import' => true,
          'where' => 'civicrm_hrjobroles.cost_center_val_type',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
        ) ,
        'hrjc_role_percent_pay_cost_center' => array(
          'name' => 'percent_pay_cost_center',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Percent of Pay Assigned to this cost center') ,
          'description' => 'Percentage of Pay Assigned to this cost center',
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'import' => true,
          'where' => 'civicrm_hrjobroles.percent_pay_cost_center',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
        ) ,
        'hrjc_role_amount_pay_cost_center' => array(
          'name' => 'amount_pay_cost_center',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Amount of Pay Assigned to this cost center') ,
          'description' => 'Amount of Pay Assigned to this cost center',
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'import' => true,
          'where' => 'civicrm_hrjobroles.amount_pay_cost_center',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
        ) ,
        'funder' => array(
          'name' => 'funder',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Funders') ,
          'description' => 'List of attached Funder contact IDs',
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'import' => true,
          'where' => 'civicrm_hrjobroles.funder',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
        ) ,
        'hrjc_funder_val_type' => array(
          'name' => 'funder_val_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Funder value type') ,
          'description' => 'Funder value type (fixed or %)',
          'maxlength' => 127,
          'size' => CRM_Utils_Type::HUGE,
          'import' => true,
          'where' => 'civicrm_hrjobroles.funder_val_type',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
        ) ,
        'hrjc_role_percent_pay_funder' => array(
          'name' => 'percent_pay_funder',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Percent of Pay Assigned to this funder') ,
          'description' => 'Percentage of Pay Assigned to this funder',
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'import' => true,
          'where' => 'civicrm_hrjobroles.percent_pay_funder',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
        ) ,
        'hrjc_role_amount_pay_funder' => array(
          'name' => 'amount_pay_funder',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Amount of Pay Assigned to this funder') ,
          'description' => 'Amount of Pay Assigned to this funder',
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'import' => true,
          'where' => 'civicrm_hrjobroles.amount_pay_funder',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
        ) ,
        'location' => array(
          'name' => 'location',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => ts('Job Role Location') ,
          'description' => 'Main work location',
          'maxlength' => 127,
          'size' => CRM_Utils_Type::HUGE,
          'import' => true,
          'where' => 'civicrm_hrjobroles.location',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
          'pseudoconstant' => array(
            'optionGroupName' => 'hrjc_location',
            'optionEditPath' => 'civicrm/admin/options/hrjc_location',
          )
        ) ,
        'hrjc_role_start_date' => array(
          'name' => 'start_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => ts('Job Role Start Date') ,
          'description' => 'Start Date of the job role',
          'import' => true,
          'where' => 'civicrm_hrjobroles.start_date',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
          'default' => 'NULL',
        ) ,
        'hrjc_role_end_date' => array(
          'name' => 'end_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => ts('Job Role End Date') ,
          'description' => 'End Date of the job role',
          'import' => true,
          'where' => 'civicrm_hrjobroles.end_date',
          'headerPattern' => '',
          'dataPattern' => '',
          'export' => true,
          'default' => 'NULL',
        ) ,
      );
    }
    return self::$_fields;
  }
  /**
   * Returns an array containing, for each field, the arary key used for that
   * field in self::$_fields.
   *
   * @return array
   */
  static function &fieldKeys()
  {
    if (!(self::$_fieldKeys)) {
      self::$_fieldKeys = array(
        'id' => 'id',
        'job_contract_id' => 'job_contract_id',
        'title' => 'title',
        'description' => 'description',
        'status' => 'status',
        'region' => 'hrjc_region',
        'department' => 'hrjc_role_department',
        'level_type' => 'hrjc_level_type',
        'manager_contact_id' => 'manager_contact_id',
        'organization' => 'organization',
        'cost_center' => 'hrjc_cost_center',
        'cost_center_val_type' => 'hrjc_cost_center_val_type',
        'percent_pay_cost_center' => 'hrjc_role_percent_pay_cost_center',
        'amount_pay_cost_center' => 'hrjc_role_amount_pay_cost_center',
        'funder' => 'funder',
        'funder_val_type' => 'hrjc_funder_val_type',
        'percent_pay_funder' => 'hrjc_role_percent_pay_funder',
        'amount_pay_funder' => 'hrjc_role_amount_pay_funder',
        'location' => 'location',
        'start_date' => 'hrjc_role_start_date',
        'end_date' => 'hrjc_role_end_date',
      );
    }
    return self::$_fieldKeys;
  }
  /**
   * Returns the names of this table
   *
   * @return string
   */
  static function getTableName()
  {
    return self::$_tableName;
  }
  /**
   * Returns if this table needs to be logged
   *
   * @return boolean
   */
  function getLog()
  {
    return self::$_log;
  }
  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  static function &import($prefix = false)
  {
    if (!(self::$_import)) {
      self::$_import = array();
      $fields = self::fields();
      foreach($fields as $name => $field) {
        if (CRM_Utils_Array::value('import', $field)) {
          if ($prefix) {
            self::$_import['hrjobroles'] = & $fields[$name];
          } else {
            self::$_import[$name] = & $fields[$name];
          }
        }
      }
    }
    return self::$_import;
  }
  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  static function &export($prefix = false)
  {
    if (!(self::$_export)) {
      self::$_export = array();
      $fields = self::fields();
      foreach($fields as $name => $field) {
        if (CRM_Utils_Array::value('export', $field)) {
          if ($prefix) {
            self::$_export['hrjobroles'] = & $fields[$name];
          } else {
            self::$_export[$name] = & $fields[$name];
          }
        }
      }
    }
    return self::$_export;
  }
}
